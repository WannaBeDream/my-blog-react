{"version":3,"sources":["Components/Contacts/StepperWithMap/Stepper.jsx","Components/Contacts/StepperWithMap/Map.jsx","Components/Contacts/StepperWithMap/MyLinksWithLogos.jsx","Components/Contacts/DirectionSnackbar.js","Components/Contacts/Contacts.jsx","Containers/ContactsContainer.jsx"],"names":["AutoPlaySwipeableViews","autoPlay","SwipeableViews","useStyles","makeStyles","theme","root","maxWidth","flexGrow","header","display","alignItems","height","paddingLeft","spacing","backgroundColor","palette","background","default","backOfImg","img","overflow","width","TextMobileStepper","myTeachers","classes","useTheme","React","useState","activeStep","setActiveStep","setIsStopMoving","maxSteps","length","className","onMouseOut","Paper","square","elevation","axis","direction","index","onChangeIndex","step","enableMouseEvents","map","key","name","Math","abs","src","srcImg","alt","Grid","container","Typography","position","MobileStepper","steps","variant","nextButton","Button","size","onClick","prevActiveStep","disabled","backButton","Map","center","zoom","maxZoom","attributionControl","zoomControl","doubleClickZoom","scrollWheelZoom","dragging","animate","easeLinearity","TileLayer","url","Marker","Popup","Component","logosContainer","justifyContent","MyLinksWithLogos","myContactsLinks","link","target","href","color","style","fontSize","Alert","props","DirectionSnackbar","handleCloseSnack","openSnack","Snackbar","open","onClose","autoHideDuration","message","severity","mainGrid","marginTop","padding","transform","contactsText","contactsContainer","contactsFormContainer","margin","myLinksCenter","button","form","flexDirection","inputContainer","formInput","borderRadius","Contacts","setName","email","setEmail","subject","setSubject","msg","setMsg","setOpenSnack","resetForm","Box","item","HeadlineSection","headlineText","onSubmit","e","preventDefault","templateParams","from_name","to_name","message_html","emailjs","method","TextField","required","type","id","label","value","onChange","event","console","log","endIcon","Icon","ContactsContainer","this","connect","state"],"mappings":"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","file":"static/js/10.50853496.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport MobileStepper from '@material-ui/core/MobileStepper';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport SwipeableViews from 'react-swipeable-views';\nimport { autoPlay } from 'react-swipeable-views-utils';\n\nconst AutoPlaySwipeableViews = autoPlay(SwipeableViews);\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 400,\n    flexGrow: 1,\n  },\n  header: {\n    display: 'flex',\n    alignItems: 'center',\n    height: 50,\n    paddingLeft: theme.spacing(4),\n    backgroundColor: theme.palette.background.default,\n  },\n  backOfImg: {\n    display: 'flex',\n    alignItems: 'center',\n    backgroundColor: theme.palette.background.default,\n  },\n  img: {\n    height: 400,\n    maxWidth: 400,\n    overflow: 'hidden',\n    display: 'block',\n    width: '100%',\n  },\n}));\n\nexport default function TextMobileStepper({myTeachers}) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [isStopMoving, setIsStopMoving] = React.useState(true);\n  const maxSteps = myTeachers.length;\n\n  const handleNext = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    setIsStopMoving(true);\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1); \n    setIsStopMoving(true);\n  };\n\n  const handleStepChange = (step) => {\n    setActiveStep(step);\n  };\n\n  const continueToPlay = () => {\n    setIsStopMoving(false);\n  };\n\n  return (\n    <div className={classes.root} onMouseOut={continueToPlay}>\n      <Paper square elevation={0} className={classes.backOfImg}  >\n     \n      \n        <AutoPlaySwipeableViews\n        axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n        index={activeStep}\n        onChangeIndex={handleStepChange}\n        enableMouseEvents\n       \n        >\n        {myTeachers.map((step, index) => (\n          <div key={step.name}>\n            {Math.abs(activeStep - index) <= 2 ? (\n              <img className={classes.img} src={step.srcImg} alt={step.name} />\n            ) : null}\n          </div>\n        ))}\n      </AutoPlaySwipeableViews>\n      \n      </Paper>\n      <Paper square elevation={0} className={classes.header}>\n          <Grid container direction=\"column\">\n                <Typography>{myTeachers[activeStep].name}</Typography>\n                <Typography>{myTeachers[activeStep].position}</Typography>\n          </Grid>\n      </Paper>\n      <MobileStepper\n        steps={maxSteps}\n        position=\"static\"\n        variant=\"text\"\n        activeStep={activeStep}\n        nextButton={\n          <Button size=\"small\" onClick={handleNext} disabled={activeStep === maxSteps - 1}>\n            Next\n            {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n          </Button>\n        }\n        backButton={\n          <Button size=\"small\" onClick={handleBack} disabled={activeStep === 0}>\n            {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n            Back\n          </Button>\n        }\n      />\n    </div>\n  );\n}","import React from 'react'\nimport { Map as LeafletMap, TileLayer, Marker, Popup } from 'react-leaflet';\n\nclass Map extends React.Component {\n  render() {\n    return (\n      <LeafletMap\n        center={[49, 35]}\n        zoom={3}\n        maxZoom={10}\n        attributionControl={true}\n        zoomControl={true}\n        doubleClickZoom={true}\n        scrollWheelZoom={true}\n        dragging={true}\n        animate={true}\n        easeLinearity={0.35}\n      >\n        <TileLayer\n          url='http://{s}.tile.osm.org/{z}/{x}/{y}.png'\n        />\n        <Marker position={[49, 35]}>\n          <Popup>\n            Ukraine, Dnepr\n          </Popup>\n        </Marker>\n      </LeafletMap>\n    );\n  }\n}\n\nexport default Map","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport MailIcon from '@material-ui/icons/Mail';\nimport TelegramIcon from '@material-ui/icons/Telegram';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\n\nconst useStyles = makeStyles((theme) => ({\n  img: {\n    height: 100,\n    maxWidth: 100,\n    overflow: 'hidden',\n    display: 'flex',\n    width: '100%',\n  },\n  logosContainer: {\n    justifyContent: \"center\",\n    height: \"100%\",\n    justifyContent: \"space-evenly\",\n  }\n}));\n\nexport default function MyLinksWithLogos({myContactsLinks}) {\n  const classes = useStyles();\n \n  return (<>\n   <Grid container direction=\"column\" className={classes.logosContainer}>\n      {myContactsLinks.map((link, index) => (\n        <a key={index} target=\"_blank\" href={link.src} className={\"myContactsIcon\"}>\n      {link.name === \"github\" ? <GitHubIcon color=\"primary\" style={{ fontSize: 75 }}/>:''}\n      {link.name === \"telegram\" ? <TelegramIcon color=\"secondary\" style={{ fontSize: 75 }}/>:''}\n      {link.name === \"gmail\" ? <MailIcon  style={{ fontSize: 75, color:\"purple\" }}/>:''}\n      {link.name === \"linkedin\" ? <LinkedInIcon style={{ fontSize: 75 }}/>:''}\n        </a>\n      ))}\n      </Grid>\n   </>\n  );\n}","import React from 'react';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\n\r\nexport default function DirectionSnackbar({ handleCloseSnack, openSnack }) {\r\n\r\n    return (\r\n        <Snackbar\r\n            open={openSnack}\r\n            onClose={handleCloseSnack}\r\n            autoHideDuration={6000}\r\n            message=\"message has been sent\"\r\n        >\r\n            <Alert onClose={handleCloseSnack} severity=\"success\">\r\n                This is a success message!\r\n        </Alert>\r\n        </Snackbar>\r\n    );\r\n}","import React from \"react\";\nimport { lighten, makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Slide from '@material-ui/core/Slide';\nimport TextField from \"@material-ui/core/TextField\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport HeadlineSection from \"../Common/HeadlineSection\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextMobileStepper from \"./StepperWithMap/Stepper\";\nimport Map from \"./StepperWithMap/Map\";\nimport MyLinksWithLogos from \"./StepperWithMap/MyLinksWithLogos\";\nimport Icon from '@material-ui/core/Icon';\nimport Button from '@material-ui/core/Button';\nimport DirectionSnackbar from './DirectionSnackbar';\nimport * as emailjs from 'emailjs-com';\n\nconst useStyles = makeStyles((theme) => ({\n  mainGrid: {\n    marginTop: theme.spacing(3),\n    padding: theme.spacing(5),\n    position: \"relative\",\n    transform: `translate(0px, -205px)`,\n  },\n  contactsText: {\n    color: \"white\",\n  },\n  contactsContainer: {\n    justifyContent: \"space-between\",\n  },\n  contactsFormContainer: {\n    justifyContent: \"center\",\n    margin: \"8px\"\n  },\n  myLinksCenter: {\n    margin: \"0 auto\",\n  },\n  button: {\n    margin: \"0 auto\",\n  },\n  form: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    margin: \"16px\",\n    flexDirection: \"column\"\n\n  },\n  inputContainer: {\n    margin: \"8px\"\n  },\n  formInput: {\n    backgroundColor: \"white\",\n    borderRadius: \"4px\",\n  }\n \n}));\n\n\nexport default function Contacts({ myContactsLinks, myTeachers }) {\n  const classes = useStyles();\n  const [name, setName] = React.useState();\n  const [email, setEmail] = React.useState();\n  const [subject, setSubject] = React.useState();\n  const [msg, setMsg] = React.useState();\n  const [openSnack, setOpenSnack] = React.useState(false);\n\n  const handleClickSnack = () => {\n    setOpenSnack(true);\n  };\n\n  const handleCloseSnack = () => {\n    setOpenSnack(false);\n  };\n\n\n  const onNameChange = (event) => {\n    setName(event.target.value);\n    console.log(event.target.value)\n  };\n  const onEmailChange = (event) => {\n    setEmail(event.target.value);\n  };\n  const onSubjectChange = (event) => {\n    setSubject(event.target.value);\n  };\n  const onMsgChange = (event) => {\n    setMsg(event.target.value);\n  };\n  const submitEmail = (e) => {\n    e.preventDefault();\n    let templateParams = {\n      from_name: email,\n      to_name: 'alexxldub@gmail.com',\n      subject: subject,\n      message_html: msg,\n     };    \n      emailjs.send(\n      'gmail',\n      'template_THkezCw2',\n       templateParams,\n      'user_DCkljnnO831QLbSuFwNkp'\n     )\n     handleClickSnack();\n    resetForm();\n  };\n  const resetForm = () => {\n    setName(\"\");\n    setEmail(\"\");\n    setSubject(\"\");\n    setMsg(\"\");\n  };\n\n  return (\n    <Box>\n      <Grid\n        container\n        direction=\"column\"\n        spacing={4}\n        className={classes.mainGrid}\n      >\n        <Grid item>\n          <HeadlineSection headlineText={\"Contacts\"} />\n        </Grid>\n        <Grid item>\n          <Typography variant=\"h6\" className={classes.contactsText}>\n            Thanks a lot for watching, I was created this application with\n            expirience which my teachers gived me, thanks a lot them. You can\n            find me with this links.\n          </Typography>\n        </Grid>\n        <Grid item>\n          <Grid\n            container\n            direction=\"row\"\n            spacing={4}\n            className={classes.contactsContainer}\n          >\n            <Grid item>\n              <TextMobileStepper myTeachers={myTeachers} />\n            </Grid>\n            <Grid item className={classes.myLinksCenter}>\n              <MyLinksWithLogos myContactsLinks={myContactsLinks} />\n            </Grid>\n            <Grid item>\n              <Map />\n            </Grid>\n          </Grid>\n\n            <Grid\n              container\n              direction=\"column\"\n              spacing={4}\n            >\n              <Grid item>\n          <HeadlineSection headlineText={\"Contact me\"} />\n        </Grid>\n          <form className={classes.form} onSubmit={submitEmail} method=\"POST\">\n              <Grid  container direction=\"row\"  className={classes.contactsFormContainer} >\n              <Grid item className={classes.inputContainer}>\n              <TextField\n                required={true}\n                type=\"text\"\n                id=\"filled-basic\" label=\"Name\" variant=\"filled\"\n                value={name}\n                onChange={onNameChange}\n                className={classes.formInput}\n                color=\"primary\"\n              />\n              </Grid>\n              <Grid item className={classes.inputContainer}>\n              <TextField\n                required={true}\n                type=\"email\"\n                id=\"filled-basic\" label=\"Email\" variant=\"filled\"\n                value={email}\n                onChange={onEmailChange}\n                className={classes.formInput}\n              />\n              </Grid>\n              </Grid>\n              <Grid container direction=\"row\"  className={classes.contactsFormContainer} >\n                <Grid item className={classes.inputContainer}>\n              <TextField\n                required={true}\n                type=\"text\"\n                id=\"filled-basic\" label=\"Subject\" variant=\"filled\"\n                value={subject}\n                onChange={onSubjectChange}\n                className={classes.formInput}\n              />\n              </Grid>\n              <Grid item className={classes.inputContainer}>\n              <TextField\n                required={true}\n                \n                label=\"Message\"\n                id=\"filled-basic\"\n                 variant=\"filled\"\n                value={msg}\n                onChange={onMsgChange}\n                className={classes.formInput}\n              />\n              </Grid>\n              </Grid>\n              <div className={classes.button}>\n              <Button\n              type=\"submit\"\n        variant=\"contained\"\n        color=\"primary\"\n        \n        endIcon={<Icon>send</Icon>}\n      >\n        Send\n      </Button>\n      </div>\n          </form>\n          \n            </Grid>\n        </Grid>\n      </Grid>\n      <DirectionSnackbar handleCloseSnack={handleCloseSnack} openSnack={openSnack}   />\n    </Box>\n  );\n}\n","import React from \"react\";\nimport Contacts from \"./../Components/Contacts/Contacts\";\nimport { connect } from \"react-redux\";\n\nclass ContactsContainer extends React.Component {\n  \n  render() {\n    return <Contacts {...this.props} />;\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  myContactsLinks: state.Contacts.myContactsLinks,\n  myTeachers: state.Contacts.myTeachers,\n});\n\nexport default connect(mapStateToProps, {})(ContactsContainer);"],"sourceRoot":""}