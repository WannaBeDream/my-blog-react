{"version":3,"sources":["../node_modules/@material-ui/icons/PlayArrow.js","../node_modules/react-howler/lib/index.js","../node_modules/react-howler/lib/ReactHowler.js","../node_modules/react-howler/lib/howler.js","../node_modules/howler/dist/howler.js","../node_modules/react-howler/lib/utils.js","../node_modules/@material-ui/icons/VolumeOff.js","../node_modules/@material-ui/icons/VolumeUp.js","../node_modules/@material-ui/icons/SkipPrevious.js","../node_modules/@material-ui/icons/Pause.js","../node_modules/@material-ui/icons/SkipNext.js","../node_modules/@material-ui/icons/Radio.js","../node_modules/@material-ui/icons/ExpandLess.js","../node_modules/@material-ui/icons/ExpandMore.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_react","_default","createElement","d","module","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","Constructor","protoProps","staticProps","prototype","_react2","_propTypes2","_howler4","_utils","obj","__esModule","ReactHowler","_Component","instance","TypeError","_classCallCheck","this","_this","self","call","ReferenceError","_possibleConstructorReturn","__proto__","getPrototypeOf","initHowler","bind","subClass","superClass","create","constructor","setPrototypeOf","_inherits","JSON","stringify","src","toggleHowler","destroyHowler","arguments","undefined","Howl","howler","format","mute","loop","preload","volume","onend","onEnd","onplay","onPlay","onpause","onPause","onvolume","onVolume","onstop","onStop","onload","onLoad","onloaderror","onLoadError","html5","playing","play","off","stop","unload","pause","seek","howlerState","load","id","state","_howler","apply","_howler2","_howler3","pos","duration","set","howl","get","Component","propTypes","oneOfType","string","arrayOf","isRequired","bool","number","func","defaultProps","noop","Howler","window","HowlerGlobal","init","_counter","_html5AudioPool","html5PoolSize","_codecs","_howls","_muted","_volume","_canPlayEvent","_navigator","navigator","masterGain","noAudio","usingWebAudio","autoSuspend","ctx","autoUnlock","_setup","vol","parseFloat","setupAudioContext","gain","setValueAtTime","currentTime","_webAudio","ids","_getSoundIds","j","sound","_soundById","_node","muted","close","codecs","ext","replace","_autoSuspend","Audio","oncanplaythrough","e","_setupCodecs","audioTest","err","canPlayType","mpegTest","checkOpera","userAgent","match","isOldOpera","parseInt","split","mp3","mpeg","opus","ogg","oga","wav","aac","caf","m4a","m4b","mp4","weba","webm","dolby","flac","_unlockAudio","_audioUnlocked","_mobileUnloaded","sampleRate","_scratchBuffer","createBuffer","unlock","audioNode","_unlocked","_releaseHtml5Audio","_autoResume","source","createBufferSource","buffer","connect","destination","start","noteOn","resume","onended","disconnect","document","removeEventListener","_emit","addEventListener","_obtainHtml5Audio","pop","testPlay","Promise","then","catch","console","warn","audio","push","suspend","_sounds","_paused","_suspendTimer","clearTimeout","setTimeout","handleSuspension","_resumeAfterSuspend","o","error","_autoplay","autoplay","_format","_html5","_loop","_pool","pool","_preload","_rate","rate","_sprite","sprite","_src","_xhr","method","xhr","headers","withCredentials","_duration","_state","_endTimers","_queue","_playLock","_onend","fn","_onfade","onfade","_onload","_onloaderror","_onplayerror","onplayerror","_onpause","_onplay","_onstop","_onmute","onmute","_onvolume","_onrate","onrate","_onseek","onseek","_onunlock","onunlock","_onresume","event","action","url","str","exec","toLowerCase","location","protocol","slice","Sound","loadBuffer","internal","num","_ended","_id","_inactiveSound","soundId","_loadQueue","Math","max","_seek","timeout","abs","setParams","_start","_stop","node","playWebAudio","_refreshBuffer","_playStart","bufferSource","noteGrainOn","Infinity","once","_clearTimer","playHtml5","playbackRate","paused","loadedNoReadyState","ejecta","readyState","isCocoonJS","listener","_rateSeek","_stopFade","noteOff","_cleanBuffer","isNaN","_clearSound","_interval","args","index","indexOf","fade","from","to","len","min","end","linearRampToValueAtTime","_startFadeInterval","isGroup","diff","steps","stepLen","lastTick","Date","now","_fadeTo","setInterval","tick","round","clearInterval","cancelScheduledValues","loopStart","loopEnd","realTime","rateSeek","seekAndEmit","emitSeek","sounds","_errorFn","_loadFn","splice","remCache","cache","on","events","isId","keys","Array","isArray","msg","task","shift","ended","_drain","reset","limit","cnt","_panner","isIOS","vendor","test","_parent","parent","createGain","createGainNode","_errorListener","_loadListener","code","ceil","__default","loadSound","data","atob","dataView","Uint8Array","charCodeAt","decodeAudioData","XMLHttpRequest","open","responseType","forEach","setRequestHeader","status","response","onerror","safeXhrSend","send","arraybuffer","success","AudioContext","webkitAudioContext","iOS","platform","appVersion","version","safari","global","_super","_pos","_orientation","stereo","pan","x","y","z","positionX","setTargetAtTime","positionY","positionZ","setPosition","orientation","xUp","yUp","zUp","or","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","_stereo","_pannerAttr","coneInnerAngle","coneOuterAngle","coneOuterGain","distanceModel","maxDistance","panningModel","refDistance","rolloffFactor","_onstereo","onstereo","_onpos","onpos","_onorientation","onorientation","pannerType","createStereoPanner","setupPanner","orientationX","orientationY","orientationZ","pannerAttr","_coneInnerAngle","_coneOuterAngle","_coneOuterGain","_distanceModel","_maxDistance","_refDistance","_rolloffFactor","_panningModel","pa","panner","type","createPanner"],"mappings":"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","file":"static/js/7.9b895afb.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M8 5v14l11-7z\"\n}), 'PlayArrow');\n\nexports.default = _default;","'use strict';\n\nmodule.exports = require('./ReactHowler').default;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _howler4 = require('./howler');\n\nvar _utils = require('./utils');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar ReactHowler = function (_Component) {\n  _inherits(ReactHowler, _Component);\n\n  function ReactHowler(props) {\n    _classCallCheck(this, ReactHowler);\n\n    var _this = _possibleConstructorReturn(this, (ReactHowler.__proto__ || Object.getPrototypeOf(ReactHowler)).call(this, props));\n\n    _this.initHowler = _this.initHowler.bind(_this);\n    return _this;\n  }\n\n  _createClass(ReactHowler, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.initHowler();\n    }\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(props) {\n      // The src prop must be either a string or an array of strings\n      // Because of this, we can use it's JSON representation to check for changes\n      if (JSON.stringify(props.src) !== JSON.stringify(this.props.src)) {\n        this.initHowler(props);\n      } else {\n        this.toggleHowler(props);\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this.destroyHowler();\n    }\n    /**\n     * Create howler object with given props\n     */\n\n  }, {\n    key: 'initHowler',\n    value: function initHowler() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n\n      this.destroyHowler();\n      if (typeof _howler4.Howl !== 'undefined') {\n        // Check if window is available\n        this.howler = new _howler4.Howl({\n          src: props.src,\n          format: props.format,\n          mute: props.mute,\n          loop: props.loop,\n          preload: props.preload,\n          volume: props.volume,\n          onend: props.onEnd,\n          onplay: props.onPlay,\n          onpause: props.onPause,\n          onvolume: props.onVolume,\n          onstop: props.onStop,\n          onload: props.onLoad,\n          onloaderror: props.onLoadError,\n          html5: props.html5\n        });\n\n        if (props.playing) {\n          this.play();\n        }\n      }\n    }\n\n    /**\n     * Stop, unload and destroy howler object\n     */\n\n  }, {\n    key: 'destroyHowler',\n    value: function destroyHowler() {\n      if (this.howler) {\n        this.howler.off(); // Remove event listener\n        this.howler.stop(); // Stop playback\n        this.howler.unload(); // Remove sound from pool\n        this.howler = null; // Destroy it\n      }\n    }\n  }, {\n    key: 'toggleHowler',\n    value: function toggleHowler(props) {\n      props.playing ? this.play() : this.pause();\n      this.loop(props.loop);\n\n      if (props.mute !== this.props.mute) {\n        this.mute(props.mute);\n      }\n\n      if (props.volume !== this.props.volume) {\n        this.volume(props.volume);\n      }\n\n      if (typeof props.seek !== 'undefined' && props.seek !== this.seek()) {\n        this.seek(props.seek);\n      }\n\n      if (props.preload && this.howlerState() === 'unloaded') {\n        this.load();\n      }\n    }\n  }, {\n    key: 'play',\n\n\n    /**\n     * Begins playback of a sound when not playing\n     */\n    value: function play() {\n      var playing = this.howler.playing();\n\n      if (!playing) {\n        // Automatically load if we're trying to play\n        // and the howl is not loaded\n        if (this.howlerState() === 'unloaded') {\n          this.load();\n        }\n\n        this.howler.play();\n      }\n    }\n\n    /**\n     * Pauses playback of sound or group\n     * If no id given, pauses all playback\n     * @param {Number} id = undefined [sound of group to pause]\n     */\n\n  }, {\n    key: 'pause',\n    value: function pause() {\n      var id = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n\n      if (id) {\n        this.howler.pause(id);\n      } else {\n        this.howler.pause();\n      }\n    }\n\n    /**\n     * Check the load status of the Howl\n     * @return {String} [unloaded, loading or loaded]\n     */\n\n  }, {\n    key: 'howlerState',\n    value: function howlerState() {\n      return this.howler.state();\n    }\n\n    /**\n     * Stops playback of sound or group\n     * If no id given, stops all playback\n     * @param {Number} id = undefined [sound of group to pause]\n     */\n\n  }, {\n    key: 'stop',\n    value: function stop() {\n      var id = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n\n      if (id) {\n        this.howler.stop(id);\n      } else {\n        this.howler.stop();\n      }\n    }\n\n    /**\n     * Mutes the sound, but doesn't pause the playback.\n     * @param {Boolean} [muted] [True to mute and false to unmute]\n     * @param {Number} [id] [The sound ID. If none is passed, all sounds in group are muted]\n     */\n\n  }, {\n    key: 'mute',\n    value: function mute() {\n      var _howler;\n\n      (_howler = this.howler).mute.apply(_howler, arguments);\n    }\n\n    /**\n     * Get/set volume of this sound or the group. This method optionally takes 0, 1 or 2 arguments.\n     * @param {Number} [volume] [Volume from 0.0 to 1.0]\n     * @param {Number} [id] [The sound ID. If none is passed, all sounds in group are muted]\n     */\n\n  }, {\n    key: 'volume',\n    value: function volume() {\n      var _howler2;\n\n      return (_howler2 = this.howler).volume.apply(_howler2, arguments);\n    }\n\n    /**\n     * Get/set whether to loop the sound or group. This method can optionally take 0, 1 or 2 arguments.\n     * @param {Boolean} [loop] [To loop or not to loop, that is the question]\n     * @param {Number} [id] [The sound ID. If none is passed, all sounds in group will have their loop property updated]\n     */\n\n  }, {\n    key: 'loop',\n    value: function loop() {\n      var _howler3;\n\n      return (_howler3 = this.howler).loop.apply(_howler3, arguments);\n    }\n\n    /**\n     * Set/get current position of player\n     * @param  {Number} pos [seek player to position]\n     * @return {Number}     [return current position]\n     */\n\n  }, {\n    key: 'seek',\n    value: function seek() {\n      var pos = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n      if (!this.howler) {\n        return 0;\n      }\n\n      if (!pos && pos !== 0) {\n        return this.howler.seek();\n      }\n\n      if (pos || pos === 0) {\n        this.howler.seek(pos);\n        return pos;\n      }\n    }\n\n    /**\n     * Get the duration of the audio source\n     * @return {Number} [Audio length in seconds. Will return 0 until after the load event fires]\n     */\n\n  }, {\n    key: 'duration',\n    value: function duration() {\n      return this.howler.duration();\n    }\n\n    /**\n     * load audio file\n     */\n\n  }, {\n    key: 'load',\n    value: function load() {\n      this.howler.load();\n    }\n\n    /**\n     * Only render a placeholder\n     */\n\n  }, {\n    key: 'render',\n    value: function render() {\n      return _react2.default.createElement('div', null);\n    }\n  }, {\n    key: 'howler',\n    set: function set(howl) {\n      if (howl) {\n        this._howler = howl;\n      }\n    },\n    get: function get() {\n      return this._howler;\n    }\n  }]);\n\n  return ReactHowler;\n}(_react.Component);\n\nReactHowler.propTypes = {\n  src: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.arrayOf(_propTypes2.default.string)]).isRequired,\n  format: _propTypes2.default.arrayOf(_propTypes2.default.string),\n  playing: _propTypes2.default.bool,\n  mute: _propTypes2.default.bool,\n  loop: _propTypes2.default.bool,\n  preload: _propTypes2.default.bool,\n  volume: _propTypes2.default.number,\n  onEnd: _propTypes2.default.func,\n  onPause: _propTypes2.default.func,\n  onPlay: _propTypes2.default.func,\n  onVolume: _propTypes2.default.func,\n  onStop: _propTypes2.default.func,\n  onLoad: _propTypes2.default.func,\n  onLoadError: _propTypes2.default.func,\n  html5: _propTypes2.default.bool\n};\n\nReactHowler.defaultProps = {\n  playing: true, // Enable autoplay by default\n  format: [],\n  mute: false,\n  preload: true,\n  loop: false,\n  volume: 1.0,\n  onEnd: _utils.noop,\n  onPause: _utils.noop,\n  onPlay: _utils.noop,\n  onVolume: _utils.noop,\n  onStop: _utils.noop,\n  onLoad: _utils.noop,\n  onLoadError: _utils.noop,\n  html5: false\n};\n\nexports.default = ReactHowler;","'use strict';\n\nvar Howler = void 0;\n\nif (typeof window !== 'undefined') {\n  Howler = require('howler');\n}\n\nmodule.exports = Howler;","/*!\n *  howler.js v2.2.0\n *  howlerjs.com\n *\n *  (c) 2013-2020, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create the global controller. All contained methods and properties apply\n   * to all sounds that are currently playing or will be in the future.\n   */\n  var HowlerGlobal = function() {\n    this.init();\n  };\n  HowlerGlobal.prototype = {\n    /**\n     * Initialize the global Howler object.\n     * @return {Howler}\n     */\n    init: function() {\n      var self = this || Howler;\n\n      // Create a global ID counter.\n      self._counter = 1000;\n\n      // Pool of unlocked HTML5 Audio objects.\n      self._html5AudioPool = [];\n      self.html5PoolSize = 10;\n\n      // Internal properties.\n      self._codecs = {};\n      self._howls = [];\n      self._muted = false;\n      self._volume = 1;\n      self._canPlayEvent = 'canplaythrough';\n      self._navigator = (typeof window !== 'undefined' && window.navigator) ? window.navigator : null;\n\n      // Public properties.\n      self.masterGain = null;\n      self.noAudio = false;\n      self.usingWebAudio = true;\n      self.autoSuspend = true;\n      self.ctx = null;\n\n      // Set to false to disable the auto audio unlocker.\n      self.autoUnlock = true;\n\n      // Setup the various state values for global tracking.\n      self._setup();\n\n      return self;\n    },\n\n    /**\n     * Get/set the global volume for all sounds.\n     * @param  {Float} vol Volume from 0.0 to 1.0.\n     * @return {Howler/Float}     Returns self or current volume.\n     */\n    volume: function(vol) {\n      var self = this || Howler;\n      vol = parseFloat(vol);\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        self._volume = vol;\n\n        // Don't update any of the nodes if we are muted.\n        if (self._muted) {\n          return self;\n        }\n\n        // When using Web Audio, we just need to adjust the master gain.\n        if (self.usingWebAudio) {\n          self.masterGain.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n        }\n\n        // Loop through and change volume for all HTML5 audio nodes.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and change the volumes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node) {\n                sound._node.volume = sound._volume * vol;\n              }\n            }\n          }\n        }\n\n        return self;\n      }\n\n      return self._volume;\n    },\n\n    /**\n     * Handle muting and unmuting globally.\n     * @param  {Boolean} muted Is muted or not.\n     */\n    mute: function(muted) {\n      var self = this || Howler;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      self._muted = muted;\n\n      // With Web Audio, we just need to mute the master gain.\n      if (self.usingWebAudio) {\n        self.masterGain.gain.setValueAtTime(muted ? 0 : self._volume, Howler.ctx.currentTime);\n      }\n\n      // Loop through and mute all HTML5 Audio nodes.\n      for (var i=0; i<self._howls.length; i++) {\n        if (!self._howls[i]._webAudio) {\n          // Get all of the sounds in this Howl group.\n          var ids = self._howls[i]._getSoundIds();\n\n          // Loop through all sounds and mark the audio node as muted.\n          for (var j=0; j<ids.length; j++) {\n            var sound = self._howls[i]._soundById(ids[j]);\n\n            if (sound && sound._node) {\n              sound._node.muted = (muted) ? true : sound._muted;\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Handle stopping all sounds globally.\n     */\n    stop: function() {\n      var self = this || Howler;\n\n      // Loop through all Howls and stop them.\n      for (var i=0; i<self._howls.length; i++) {\n        self._howls[i].stop();\n      }\n\n      return self;\n    },\n\n    /**\n     * Unload and destroy all currently loaded Howl objects.\n     * @return {Howler}\n     */\n    unload: function() {\n      var self = this || Howler;\n\n      for (var i=self._howls.length-1; i>=0; i--) {\n        self._howls[i].unload();\n      }\n\n      // Create a new AudioContext to make sure it is fully reset.\n      if (self.usingWebAudio && self.ctx && typeof self.ctx.close !== 'undefined') {\n        self.ctx.close();\n        self.ctx = null;\n        setupAudioContext();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for codec support of specific extension.\n     * @param  {String} ext Audio file extention.\n     * @return {Boolean}\n     */\n    codecs: function(ext) {\n      return (this || Howler)._codecs[ext.replace(/^x-/, '')];\n    },\n\n    /**\n     * Setup various state values for global tracking.\n     * @return {Howler}\n     */\n    _setup: function() {\n      var self = this || Howler;\n\n      // Keeps track of the suspend/resume state of the AudioContext.\n      self.state = self.ctx ? self.ctx.state || 'suspended' : 'suspended';\n\n      // Automatically begin the 30-second suspend process\n      self._autoSuspend();\n\n      // Check if audio is available.\n      if (!self.usingWebAudio) {\n        // No audio is available on this system if noAudio is set to true.\n        if (typeof Audio !== 'undefined') {\n          try {\n            var test = new Audio();\n\n            // Check if the canplaythrough event is available.\n            if (typeof test.oncanplaythrough === 'undefined') {\n              self._canPlayEvent = 'canplay';\n            }\n          } catch(e) {\n            self.noAudio = true;\n          }\n        } else {\n          self.noAudio = true;\n        }\n      }\n\n      // Test to make sure audio isn't disabled in Internet Explorer.\n      try {\n        var test = new Audio();\n        if (test.muted) {\n          self.noAudio = true;\n        }\n      } catch (e) {}\n\n      // Check for supported codecs.\n      if (!self.noAudio) {\n        self._setupCodecs();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for browser support for various codecs and cache the results.\n     * @return {Howler}\n     */\n    _setupCodecs: function() {\n      var self = this || Howler;\n      var audioTest = null;\n\n      // Must wrap in a try/catch because IE11 in server mode throws an error.\n      try {\n        audioTest = (typeof Audio !== 'undefined') ? new Audio() : null;\n      } catch (err) {\n        return self;\n      }\n\n      if (!audioTest || typeof audioTest.canPlayType !== 'function') {\n        return self;\n      }\n\n      var mpegTest = audioTest.canPlayType('audio/mpeg;').replace(/^no$/, '');\n\n      // Opera version <33 has mixed MP3 support, so we need to check for and block it.\n      var checkOpera = self._navigator && self._navigator.userAgent.match(/OPR\\/([0-6].)/g);\n      var isOldOpera = (checkOpera && parseInt(checkOpera[0].split('/')[1], 10) < 33);\n\n      self._codecs = {\n        mp3: !!(!isOldOpera && (mpegTest || audioTest.canPlayType('audio/mp3;').replace(/^no$/, ''))),\n        mpeg: !!mpegTest,\n        opus: !!audioTest.canPlayType('audio/ogg; codecs=\"opus\"').replace(/^no$/, ''),\n        ogg: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        oga: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        wav: !!audioTest.canPlayType('audio/wav; codecs=\"1\"').replace(/^no$/, ''),\n        aac: !!audioTest.canPlayType('audio/aac;').replace(/^no$/, ''),\n        caf: !!audioTest.canPlayType('audio/x-caf;').replace(/^no$/, ''),\n        m4a: !!(audioTest.canPlayType('audio/x-m4a;') || audioTest.canPlayType('audio/m4a;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        m4b: !!(audioTest.canPlayType('audio/x-m4b;') || audioTest.canPlayType('audio/m4b;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        mp4: !!(audioTest.canPlayType('audio/x-mp4;') || audioTest.canPlayType('audio/mp4;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        weba: !!audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, ''),\n        webm: !!audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, ''),\n        dolby: !!audioTest.canPlayType('audio/mp4; codecs=\"ec-3\"').replace(/^no$/, ''),\n        flac: !!(audioTest.canPlayType('audio/x-flac;') || audioTest.canPlayType('audio/flac;')).replace(/^no$/, '')\n      };\n\n      return self;\n    },\n\n    /**\n     * Some browsers/devices will only allow audio to be played after a user interaction.\n     * Attempt to automatically unlock audio on the first user interaction.\n     * Concept from: http://paulbakaus.com/tutorials/html5/web-audio-on-ios/\n     * @return {Howler}\n     */\n    _unlockAudio: function() {\n      var self = this || Howler;\n\n      // Only run this if Web Audio is supported and it hasn't already been unlocked.\n      if (self._audioUnlocked || !self.ctx) {\n        return;\n      }\n\n      self._audioUnlocked = false;\n      self.autoUnlock = false;\n\n      // Some mobile devices/platforms have distortion issues when opening/closing tabs and/or web views.\n      // Bugs in the browser (especially Mobile Safari) can cause the sampleRate to change from 44100 to 48000.\n      // By calling Howler.unload(), we create a new AudioContext with the correct sampleRate.\n      if (!self._mobileUnloaded && self.ctx.sampleRate !== 44100) {\n        self._mobileUnloaded = true;\n        self.unload();\n      }\n\n      // Scratch buffer for enabling iOS to dispose of web audio buffers correctly, as per:\n      // http://stackoverflow.com/questions/24119684\n      self._scratchBuffer = self.ctx.createBuffer(1, 1, 22050);\n\n      // Call this method on touch start to create and play a buffer,\n      // then check if the audio actually played to determine if\n      // audio has now been unlocked on iOS, Android, etc.\n      var unlock = function(e) {\n        // Create a pool of unlocked HTML5 Audio objects that can\n        // be used for playing sounds without user interaction. HTML5\n        // Audio objects must be individually unlocked, as opposed\n        // to the WebAudio API which only needs a single activation.\n        // This must occur before WebAudio setup or the source.onended\n        // event will not fire.\n        while (self._html5AudioPool.length < self.html5PoolSize) {\n          try {\n            var audioNode = new Audio();\n\n            // Mark this Audio object as unlocked to ensure it can get returned\n            // to the unlocked pool when released.\n            audioNode._unlocked = true;\n\n            // Add the audio node to the pool.\n            self._releaseHtml5Audio(audioNode);\n          } catch (e) {\n            self.noAudio = true;\n            break;\n          }\n        }\n\n        // Loop through any assigned audio nodes and unlock them.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and unlock the audio nodes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node && !sound._node._unlocked) {\n                sound._node._unlocked = true;\n                sound._node.load();\n              }\n            }\n          }\n        }\n\n        // Fix Android can not play in suspend state.\n        self._autoResume();\n\n        // Create an empty buffer.\n        var source = self.ctx.createBufferSource();\n        source.buffer = self._scratchBuffer;\n        source.connect(self.ctx.destination);\n\n        // Play the empty buffer.\n        if (typeof source.start === 'undefined') {\n          source.noteOn(0);\n        } else {\n          source.start(0);\n        }\n\n        // Calling resume() on a stack initiated by user gesture is what actually unlocks the audio on Android Chrome >= 55.\n        if (typeof self.ctx.resume === 'function') {\n          self.ctx.resume();\n        }\n\n        // Setup a timeout to check that we are unlocked on the next event loop.\n        source.onended = function() {\n          source.disconnect(0);\n\n          // Update the unlocked state and prevent this check from happening again.\n          self._audioUnlocked = true;\n\n          // Remove the touch start listener.\n          document.removeEventListener('touchstart', unlock, true);\n          document.removeEventListener('touchend', unlock, true);\n          document.removeEventListener('click', unlock, true);\n\n          // Let all sounds know that audio has been unlocked.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('unlock');\n          }\n        };\n      };\n\n      // Setup a touch start listener to attempt an unlock in.\n      document.addEventListener('touchstart', unlock, true);\n      document.addEventListener('touchend', unlock, true);\n      document.addEventListener('click', unlock, true);\n\n      return self;\n    },\n\n    /**\n     * Get an unlocked HTML5 Audio object from the pool. If none are left,\n     * return a new Audio object and throw a warning.\n     * @return {Audio} HTML5 Audio object.\n     */\n    _obtainHtml5Audio: function() {\n      var self = this || Howler;\n\n      // Return the next object from the pool if one exists.\n      if (self._html5AudioPool.length) {\n        return self._html5AudioPool.pop();\n      }\n\n      //.Check if the audio is locked and throw a warning.\n      var testPlay = new Audio().play();\n      if (testPlay && typeof Promise !== 'undefined' && (testPlay instanceof Promise || typeof testPlay.then === 'function')) {\n        testPlay.catch(function() {\n          console.warn('HTML5 Audio pool exhausted, returning potentially locked audio object.');\n        });\n      }\n\n      return new Audio();\n    },\n\n    /**\n     * Return an activated HTML5 Audio object to the pool.\n     * @return {Howler}\n     */\n    _releaseHtml5Audio: function(audio) {\n      var self = this || Howler;\n\n      // Don't add audio to the pool if we don't know if it has been unlocked.\n      if (audio._unlocked) {\n        self._html5AudioPool.push(audio);\n      }\n\n      return self;\n    },\n\n    /**\n     * Automatically suspend the Web Audio AudioContext after no sound has played for 30 seconds.\n     * This saves processing/energy and fixes various browser-specific bugs with audio getting stuck.\n     * @return {Howler}\n     */\n    _autoSuspend: function() {\n      var self = this;\n\n      if (!self.autoSuspend || !self.ctx || typeof self.ctx.suspend === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      // Check if any sounds are playing.\n      for (var i=0; i<self._howls.length; i++) {\n        if (self._howls[i]._webAudio) {\n          for (var j=0; j<self._howls[i]._sounds.length; j++) {\n            if (!self._howls[i]._sounds[j]._paused) {\n              return self;\n            }\n          }\n        }\n      }\n\n      if (self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n      }\n\n      // If no sound has played after 30 seconds, suspend the context.\n      self._suspendTimer = setTimeout(function() {\n        if (!self.autoSuspend) {\n          return;\n        }\n\n        self._suspendTimer = null;\n        self.state = 'suspending';\n\n        // Handle updating the state of the audio context after suspending.\n        var handleSuspension = function() {\n          self.state = 'suspended';\n\n          if (self._resumeAfterSuspend) {\n            delete self._resumeAfterSuspend;\n            self._autoResume();\n          }\n        };\n\n        // Either the state gets suspended or it is interrupted.\n        // Either way, we need to update the state to suspended.\n        self.ctx.suspend().then(handleSuspension, handleSuspension);\n      }, 30000);\n\n      return self;\n    },\n\n    /**\n     * Automatically resume the Web Audio AudioContext when a new sound is played.\n     * @return {Howler}\n     */\n    _autoResume: function() {\n      var self = this;\n\n      if (!self.ctx || typeof self.ctx.resume === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      if (self.state === 'running' && self.ctx.state !== 'interrupted' && self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n        self._suspendTimer = null;\n      } else if (self.state === 'suspended' || self.state === 'running' && self.ctx.state === 'interrupted') {\n        self.ctx.resume().then(function() {\n          self.state = 'running';\n\n          // Emit to all Howls that the audio has resumed.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('resume');\n          }\n        });\n\n        if (self._suspendTimer) {\n          clearTimeout(self._suspendTimer);\n          self._suspendTimer = null;\n        }\n      } else if (self.state === 'suspending') {\n        self._resumeAfterSuspend = true;\n      }\n\n      return self;\n    }\n  };\n\n  // Setup the global audio controller.\n  var Howler = new HowlerGlobal();\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create an audio group controller.\n   * @param {Object} o Passed in properties for this group.\n   */\n  var Howl = function(o) {\n    var self = this;\n\n    // Throw an error if no source is provided.\n    if (!o.src || o.src.length === 0) {\n      console.error('An array of source files must be passed with any new Howl.');\n      return;\n    }\n\n    self.init(o);\n  };\n  Howl.prototype = {\n    /**\n     * Initialize a new Howl group object.\n     * @param  {Object} o Passed in properties for this group.\n     * @return {Howl}\n     */\n    init: function(o) {\n      var self = this;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!Howler.ctx) {\n        setupAudioContext();\n      }\n\n      // Setup user-defined default properties.\n      self._autoplay = o.autoplay || false;\n      self._format = (typeof o.format !== 'string') ? o.format : [o.format];\n      self._html5 = o.html5 || false;\n      self._muted = o.mute || false;\n      self._loop = o.loop || false;\n      self._pool = o.pool || 5;\n      self._preload = (typeof o.preload === 'boolean' || o.preload === 'metadata') ? o.preload : true;\n      self._rate = o.rate || 1;\n      self._sprite = o.sprite || {};\n      self._src = (typeof o.src !== 'string') ? o.src : [o.src];\n      self._volume = o.volume !== undefined ? o.volume : 1;\n      self._xhr = {\n        method: o.xhr && o.xhr.method ? o.xhr.method : 'GET',\n        headers: o.xhr && o.xhr.headers ? o.xhr.headers : null,\n        withCredentials: o.xhr && o.xhr.withCredentials ? o.xhr.withCredentials : false,\n      };\n\n      // Setup all other default properties.\n      self._duration = 0;\n      self._state = 'unloaded';\n      self._sounds = [];\n      self._endTimers = {};\n      self._queue = [];\n      self._playLock = false;\n\n      // Setup event listeners.\n      self._onend = o.onend ? [{fn: o.onend}] : [];\n      self._onfade = o.onfade ? [{fn: o.onfade}] : [];\n      self._onload = o.onload ? [{fn: o.onload}] : [];\n      self._onloaderror = o.onloaderror ? [{fn: o.onloaderror}] : [];\n      self._onplayerror = o.onplayerror ? [{fn: o.onplayerror}] : [];\n      self._onpause = o.onpause ? [{fn: o.onpause}] : [];\n      self._onplay = o.onplay ? [{fn: o.onplay}] : [];\n      self._onstop = o.onstop ? [{fn: o.onstop}] : [];\n      self._onmute = o.onmute ? [{fn: o.onmute}] : [];\n      self._onvolume = o.onvolume ? [{fn: o.onvolume}] : [];\n      self._onrate = o.onrate ? [{fn: o.onrate}] : [];\n      self._onseek = o.onseek ? [{fn: o.onseek}] : [];\n      self._onunlock = o.onunlock ? [{fn: o.onunlock}] : [];\n      self._onresume = [];\n\n      // Web Audio or HTML5 Audio?\n      self._webAudio = Howler.usingWebAudio && !self._html5;\n\n      // Automatically try to enable audio.\n      if (typeof Howler.ctx !== 'undefined' && Howler.ctx && Howler.autoUnlock) {\n        Howler._unlockAudio();\n      }\n\n      // Keep track of this Howl group in the global controller.\n      Howler._howls.push(self);\n\n      // If they selected autoplay, add a play event to the load queue.\n      if (self._autoplay) {\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play();\n          }\n        });\n      }\n\n      // Load the source file unless otherwise specified.\n      if (self._preload && self._preload !== 'none') {\n        self.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Load the audio file.\n     * @return {Howler}\n     */\n    load: function() {\n      var self = this;\n      var url = null;\n\n      // If no audio is available, quit immediately.\n      if (Howler.noAudio) {\n        self._emit('loaderror', null, 'No audio support.');\n        return;\n      }\n\n      // Make sure our source is in an array.\n      if (typeof self._src === 'string') {\n        self._src = [self._src];\n      }\n\n      // Loop through the sources and pick the first one that is compatible.\n      for (var i=0; i<self._src.length; i++) {\n        var ext, str;\n\n        if (self._format && self._format[i]) {\n          // If an extension was specified, use that instead.\n          ext = self._format[i];\n        } else {\n          // Make sure the source is a string.\n          str = self._src[i];\n          if (typeof str !== 'string') {\n            self._emit('loaderror', null, 'Non-string found in selected audio sources - ignoring.');\n            continue;\n          }\n\n          // Extract the file extension from the URL or base64 data URI.\n          ext = /^data:audio\\/([^;,]+);/i.exec(str);\n          if (!ext) {\n            ext = /\\.([^.]+)$/.exec(str.split('?', 1)[0]);\n          }\n\n          if (ext) {\n            ext = ext[1].toLowerCase();\n          }\n        }\n\n        // Log a warning if no extension was found.\n        if (!ext) {\n          console.warn('No file extension was found. Consider using the \"format\" property or specify an extension.');\n        }\n\n        // Check if this extension is available.\n        if (ext && Howler.codecs(ext)) {\n          url = self._src[i];\n          break;\n        }\n      }\n\n      if (!url) {\n        self._emit('loaderror', null, 'No codec support for selected audio sources.');\n        return;\n      }\n\n      self._src = url;\n      self._state = 'loading';\n\n      // If the hosting page is HTTPS and the source isn't,\n      // drop down to HTML5 Audio to avoid Mixed Content errors.\n      if (window.location.protocol === 'https:' && url.slice(0, 5) === 'http:') {\n        self._html5 = true;\n        self._webAudio = false;\n      }\n\n      // Create a new sound object and add it to the pool.\n      new Sound(self);\n\n      // Load and decode the audio data for playback.\n      if (self._webAudio) {\n        loadBuffer(self);\n      }\n\n      return self;\n    },\n\n    /**\n     * Play a sound or resume previous playback.\n     * @param  {String/Number} sprite   Sprite name for sprite playback or sound id to continue previous.\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Number}          Sound ID.\n     */\n    play: function(sprite, internal) {\n      var self = this;\n      var id = null;\n\n      // Determine if a sprite, sound id or nothing was passed\n      if (typeof sprite === 'number') {\n        id = sprite;\n        sprite = null;\n      } else if (typeof sprite === 'string' && self._state === 'loaded' && !self._sprite[sprite]) {\n        // If the passed sprite doesn't exist, do nothing.\n        return null;\n      } else if (typeof sprite === 'undefined') {\n        // Use the default sound sprite (plays the full audio length).\n        sprite = '__default';\n\n        // Check if there is a single paused sound that isn't ended.\n        // If there is, play that sound. If not, continue as usual.\n        if (!self._playLock) {\n          var num = 0;\n          for (var i=0; i<self._sounds.length; i++) {\n            if (self._sounds[i]._paused && !self._sounds[i]._ended) {\n              num++;\n              id = self._sounds[i]._id;\n            }\n          }\n\n          if (num === 1) {\n            sprite = null;\n          } else {\n            id = null;\n          }\n        }\n      }\n\n      // Get the selected node, or get one from the pool.\n      var sound = id ? self._soundById(id) : self._inactiveSound();\n\n      // If the sound doesn't exist, do nothing.\n      if (!sound) {\n        return null;\n      }\n\n      // Select the sprite definition.\n      if (id && !sprite) {\n        sprite = sound._sprite || '__default';\n      }\n\n      // If the sound hasn't loaded, we must wait to get the audio's duration.\n      // We also need to wait to make sure we don't run into race conditions with\n      // the order of function calls.\n      if (self._state !== 'loaded') {\n        // Set the sprite value on this sound.\n        sound._sprite = sprite;\n\n        // Mark this sound as not ended in case another sound is played before this one loads.\n        sound._ended = false;\n\n        // Add the sound to the queue to be played on load.\n        var soundId = sound._id;\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play(soundId);\n          }\n        });\n\n        return soundId;\n      }\n\n      // Don't play the sound if an id was passed and it is already playing.\n      if (id && !sound._paused) {\n        // Trigger the play event, in order to keep iterating through queue.\n        if (!internal) {\n          self._loadQueue('play');\n        }\n\n        return sound._id;\n      }\n\n      // Make sure the AudioContext isn't suspended, and resume it if it is.\n      if (self._webAudio) {\n        Howler._autoResume();\n      }\n\n      // Determine how long to play for and where to start playing.\n      var seek = Math.max(0, sound._seek > 0 ? sound._seek : self._sprite[sprite][0] / 1000);\n      var duration = Math.max(0, ((self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000) - seek);\n      var timeout = (duration * 1000) / Math.abs(sound._rate);\n      var start = self._sprite[sprite][0] / 1000;\n      var stop = (self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000;\n      sound._sprite = sprite;\n\n      // Mark the sound as ended instantly so that this async playback\n      // doesn't get grabbed by another call to play while this one waits to start.\n      sound._ended = false;\n\n      // Update the parameters of the sound.\n      var setParams = function() {\n        sound._paused = false;\n        sound._seek = seek;\n        sound._start = start;\n        sound._stop = stop;\n        sound._loop = !!(sound._loop || self._sprite[sprite][2]);\n      };\n\n      // End the sound instantly if seek is at the end.\n      if (seek >= stop) {\n        self._ended(sound);\n        return;\n      }\n\n      // Begin the actual playback.\n      var node = sound._node;\n      if (self._webAudio) {\n        // Fire this when the sound is ready to play to begin Web Audio playback.\n        var playWebAudio = function() {\n          self._playLock = false;\n          setParams();\n          self._refreshBuffer(sound);\n\n          // Setup the playback params.\n          var vol = (sound._muted || self._muted) ? 0 : sound._volume;\n          node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n          sound._playStart = Howler.ctx.currentTime;\n\n          // Play the sound using the supported method.\n          if (typeof node.bufferSource.start === 'undefined') {\n            sound._loop ? node.bufferSource.noteGrainOn(0, seek, 86400) : node.bufferSource.noteGrainOn(0, seek, duration);\n          } else {\n            sound._loop ? node.bufferSource.start(0, seek, 86400) : node.bufferSource.start(0, seek, duration);\n          }\n\n          // Start a new timer if none is present.\n          if (timeout !== Infinity) {\n            self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n          }\n\n          if (!internal) {\n            setTimeout(function() {\n              self._emit('play', sound._id);\n              self._loadQueue();\n            }, 0);\n          }\n        };\n\n        if (Howler.state === 'running' && Howler.ctx.state !== 'interrupted') {\n          playWebAudio();\n        } else {\n          self._playLock = true;\n\n          // Wait for the audio context to resume before playing.\n          self.once('resume', playWebAudio);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      } else {\n        // Fire this when the sound is ready to play to begin HTML5 Audio playback.\n        var playHtml5 = function() {\n          node.currentTime = seek;\n          node.muted = sound._muted || self._muted || Howler._muted || node.muted;\n          node.volume = sound._volume * Howler.volume();\n          node.playbackRate = sound._rate;\n\n          // Some browsers will throw an error if this is called without user interaction.\n          try {\n            var play = node.play();\n\n            // Support older browsers that don't support promises, and thus don't have this issue.\n            if (play && typeof Promise !== 'undefined' && (play instanceof Promise || typeof play.then === 'function')) {\n              // Implements a lock to prevent DOMException: The play() request was interrupted by a call to pause().\n              self._playLock = true;\n\n              // Set param values immediately.\n              setParams();\n\n              // Releases the lock and executes queued actions.\n              play\n                .then(function() {\n                  self._playLock = false;\n                  node._unlocked = true;\n                  if (!internal) {\n                    self._emit('play', sound._id);\n                    self._loadQueue();\n                  }\n                })\n                .catch(function() {\n                  self._playLock = false;\n                  self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                    'on mobile devices and Chrome where playback was not within a user interaction.');\n\n                  // Reset the ended and paused values.\n                  sound._ended = true;\n                  sound._paused = true;\n                });\n            } else if (!internal) {\n              self._playLock = false;\n              setParams();\n              self._emit('play', sound._id);\n              self._loadQueue();\n            }\n\n            // Setting rate before playing won't work in IE, so we set it again here.\n            node.playbackRate = sound._rate;\n\n            // If the node is still paused, then we can assume there was a playback issue.\n            if (node.paused) {\n              self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                'on mobile devices and Chrome where playback was not within a user interaction.');\n              return;\n            }\n\n            // Setup the end timer on sprites or listen for the ended event.\n            if (sprite !== '__default' || sound._loop) {\n              self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n            } else {\n              self._endTimers[sound._id] = function() {\n                // Fire ended on this audio node.\n                self._ended(sound);\n\n                // Clear this listener.\n                node.removeEventListener('ended', self._endTimers[sound._id], false);\n              };\n              node.addEventListener('ended', self._endTimers[sound._id], false);\n            }\n          } catch (err) {\n            self._emit('playerror', sound._id, err);\n          }\n        };\n\n        // If this is streaming audio, make sure the src is set and load again.\n        if (node.src === 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA') {\n          node.src = self._src;\n          node.load();\n        }\n\n        // Play immediately if ready, or wait for the 'canplaythrough'e vent.\n        var loadedNoReadyState = (window && window.ejecta) || (!node.readyState && Howler._navigator.isCocoonJS);\n        if (node.readyState >= 3 || loadedNoReadyState) {\n          playHtml5();\n        } else {\n          self._playLock = true;\n\n          var listener = function() {\n            // Begin playback.\n            playHtml5();\n\n            // Clear this listener.\n            node.removeEventListener(Howler._canPlayEvent, listener, false);\n          };\n          node.addEventListener(Howler._canPlayEvent, listener, false);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      }\n\n      return sound._id;\n    },\n\n    /**\n     * Pause playback and save current position.\n     * @param  {Number} id The sound ID (empty to pause all in group).\n     * @return {Howl}\n     */\n    pause: function(id) {\n      var self = this;\n\n      // If the sound hasn't loaded or a play() promise is pending, add it to the load queue to pause when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'pause',\n          action: function() {\n            self.pause(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be paused.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound && !sound._paused) {\n          // Reset the seek position.\n          sound._seek = self.seek(ids[i]);\n          sound._rateSeek = 0;\n          sound._paused = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound has been created.\n              if (!sound._node.bufferSource) {\n                continue;\n              }\n\n              if (typeof sound._node.bufferSource.stop === 'undefined') {\n                sound._node.bufferSource.noteOff(0);\n              } else {\n                sound._node.bufferSource.stop(0);\n              }\n\n              // Clean up the buffer source.\n              self._cleanBuffer(sound._node);\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.pause();\n            }\n          }\n        }\n\n        // Fire the pause event, unless `true` is passed as the 2nd argument.\n        if (!arguments[1]) {\n          self._emit('pause', sound ? sound._id : null);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Stop playback and reset to start.\n     * @param  {Number} id The sound ID (empty to stop all in group).\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Howl}\n     */\n    stop: function(id, internal) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to stop when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'stop',\n          action: function() {\n            self.stop(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be stopped.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          // Reset the seek position.\n          sound._seek = sound._start || 0;\n          sound._rateSeek = 0;\n          sound._paused = true;\n          sound._ended = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound's AudioBufferSourceNode has been created.\n              if (sound._node.bufferSource) {\n                if (typeof sound._node.bufferSource.stop === 'undefined') {\n                  sound._node.bufferSource.noteOff(0);\n                } else {\n                  sound._node.bufferSource.stop(0);\n                }\n\n                // Clean up the buffer source.\n                self._cleanBuffer(sound._node);\n              }\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.currentTime = sound._start || 0;\n              sound._node.pause();\n\n              // If this is a live stream, stop download once the audio is stopped.\n              if (sound._node.duration === Infinity) {\n                self._clearSound(sound._node);\n              }\n            }\n          }\n\n          if (!internal) {\n            self._emit('stop', sound._id);\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Mute/unmute a single sound or all sounds in this Howl group.\n     * @param  {Boolean} muted Set to true to mute and false to unmute.\n     * @param  {Number} id    The sound ID to update (omit to mute/unmute all).\n     * @return {Howl}\n     */\n    mute: function(muted, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to mute when capable.\n      if (self._state !== 'loaded'|| self._playLock) {\n        self._queue.push({\n          event: 'mute',\n          action: function() {\n            self.mute(muted, id);\n          }\n        });\n\n        return self;\n      }\n\n      // If applying mute/unmute to all sounds, update the group's value.\n      if (typeof id === 'undefined') {\n        if (typeof muted === 'boolean') {\n          self._muted = muted;\n        } else {\n          return self._muted;\n        }\n      }\n\n      // If no id is passed, get all ID's to be muted.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._muted = muted;\n\n          // Cancel active fade and set the volume to the end value.\n          if (sound._interval) {\n            self._stopFade(sound._id);\n          }\n\n          if (self._webAudio && sound._node) {\n            sound._node.gain.setValueAtTime(muted ? 0 : sound._volume, Howler.ctx.currentTime);\n          } else if (sound._node) {\n            sound._node.muted = Howler._muted ? true : muted;\n          }\n\n          self._emit('mute', sound._id);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the volume of this sound or of the Howl group. This method can optionally take 0, 1 or 2 arguments.\n     *   volume() -> Returns the group's volume value.\n     *   volume(id) -> Returns the sound id's current volume.\n     *   volume(vol) -> Sets the volume of all sounds in this Howl group.\n     *   volume(vol, id) -> Sets the volume of passed sound id.\n     * @return {Howl/Number} Returns self or current volume.\n     */\n    volume: function() {\n      var self = this;\n      var args = arguments;\n      var vol, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // Return the value of the groups' volume.\n        return self._volume;\n      } else if (args.length === 1 || args.length === 2 && typeof args[1] === 'undefined') {\n        // First check if this is an ID, and if not, assume it is a new volume.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          vol = parseFloat(args[0]);\n        }\n      } else if (args.length >= 2) {\n        vol = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the volume or return the current volume.\n      var sound;\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        // If the sound hasn't loaded, add it to the load queue to change volume when capable.\n        if (self._state !== 'loaded'|| self._playLock) {\n          self._queue.push({\n            event: 'volume',\n            action: function() {\n              self.volume.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group volume.\n        if (typeof id === 'undefined') {\n          self._volume = vol;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            sound._volume = vol;\n\n            // Stop currently running fades.\n            if (!args[2]) {\n              self._stopFade(id[i]);\n            }\n\n            if (self._webAudio && sound._node && !sound._muted) {\n              sound._node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n            } else if (sound._node && !sound._muted) {\n              sound._node.volume = vol * Howler.volume();\n            }\n\n            self._emit('volume', sound._id);\n          }\n        }\n      } else {\n        sound = id ? self._soundById(id) : self._sounds[0];\n        return sound ? sound._volume : 0;\n      }\n\n      return self;\n    },\n\n    /**\n     * Fade a currently playing sound between two volumes (if no id is passed, all sounds will fade).\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id (omit to fade all sounds).\n     * @return {Howl}\n     */\n    fade: function(from, to, len, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to fade when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'fade',\n          action: function() {\n            self.fade(from, to, len, id);\n          }\n        });\n\n        return self;\n      }\n\n      // Make sure the to/from/len values are numbers.\n      from = Math.min(Math.max(0, parseFloat(from)), 1);\n      to = Math.min(Math.max(0, parseFloat(to)), 1);\n      len = parseFloat(len);\n\n      // Set the volume to the start position.\n      self.volume(from, id);\n\n      // Fade the volume of one or all sounds.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        // Create a linear fade or fall back to timeouts with HTML5 Audio.\n        if (sound) {\n          // Stop the previous fade if no sprite is being used (otherwise, volume handles this).\n          if (!id) {\n            self._stopFade(ids[i]);\n          }\n\n          // If we are using Web Audio, let the native methods do the actual fade.\n          if (self._webAudio && !sound._muted) {\n            var currentTime = Howler.ctx.currentTime;\n            var end = currentTime + (len / 1000);\n            sound._volume = from;\n            sound._node.gain.setValueAtTime(from, currentTime);\n            sound._node.gain.linearRampToValueAtTime(to, end);\n          }\n\n          self._startFadeInterval(sound, from, to, len, ids[i], typeof id === 'undefined');\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Starts the internal interval to fade a sound.\n     * @param  {Object} sound Reference to sound to fade.\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id to fade.\n     * @param  {Boolean} isGroup   If true, set the volume on the group.\n     */\n    _startFadeInterval: function(sound, from, to, len, id, isGroup) {\n      var self = this;\n      var vol = from;\n      var diff = to - from;\n      var steps = Math.abs(diff / 0.01);\n      var stepLen = Math.max(4, (steps > 0) ? len / steps : len);\n      var lastTick = Date.now();\n\n      // Store the value being faded to.\n      sound._fadeTo = to;\n\n      // Update the volume value on each interval tick.\n      sound._interval = setInterval(function() {\n        // Update the volume based on the time since the last tick.\n        var tick = (Date.now() - lastTick) / len;\n        lastTick = Date.now();\n        vol += diff * tick;\n\n        // Make sure the volume is in the right bounds.\n        if (diff < 0) {\n          vol = Math.max(to, vol);\n        } else {\n          vol = Math.min(to, vol);\n        }\n\n        // Round to within 2 decimal points.\n        vol = Math.round(vol * 100) / 100;\n\n        // Change the volume.\n        if (self._webAudio) {\n          sound._volume = vol;\n        } else {\n          self.volume(vol, sound._id, true);\n        }\n\n        // Set the group's volume.\n        if (isGroup) {\n          self._volume = vol;\n        }\n\n        // When the fade is complete, stop it and fire event.\n        if ((to < from && vol <= to) || (to > from && vol >= to)) {\n          clearInterval(sound._interval);\n          sound._interval = null;\n          sound._fadeTo = null;\n          self.volume(to, sound._id);\n          self._emit('fade', sound._id);\n        }\n      }, stepLen);\n    },\n\n    /**\n     * Internal method that stops the currently playing fade when\n     * a new fade starts, volume is changed or the sound is stopped.\n     * @param  {Number} id The sound id.\n     * @return {Howl}\n     */\n    _stopFade: function(id) {\n      var self = this;\n      var sound = self._soundById(id);\n\n      if (sound && sound._interval) {\n        if (self._webAudio) {\n          sound._node.gain.cancelScheduledValues(Howler.ctx.currentTime);\n        }\n\n        clearInterval(sound._interval);\n        sound._interval = null;\n        self.volume(sound._fadeTo, id);\n        sound._fadeTo = null;\n        self._emit('fade', id);\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the loop parameter on a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   loop() -> Returns the group's loop value.\n     *   loop(id) -> Returns the sound id's loop value.\n     *   loop(loop) -> Sets the loop value for all sounds in this Howl group.\n     *   loop(loop, id) -> Sets the loop value of passed sound id.\n     * @return {Howl/Boolean} Returns self or current loop value.\n     */\n    loop: function() {\n      var self = this;\n      var args = arguments;\n      var loop, id, sound;\n\n      // Determine the values for loop and id.\n      if (args.length === 0) {\n        // Return the grou's loop value.\n        return self._loop;\n      } else if (args.length === 1) {\n        if (typeof args[0] === 'boolean') {\n          loop = args[0];\n          self._loop = loop;\n        } else {\n          // Return this sound's loop value.\n          sound = self._soundById(parseInt(args[0], 10));\n          return sound ? sound._loop : false;\n        }\n      } else if (args.length === 2) {\n        loop = args[0];\n        id = parseInt(args[1], 10);\n      }\n\n      // If no id is passed, get all ID's to be looped.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._loop = loop;\n          if (self._webAudio && sound._node && sound._node.bufferSource) {\n            sound._node.bufferSource.loop = loop;\n            if (loop) {\n              sound._node.bufferSource.loopStart = sound._start || 0;\n              sound._node.bufferSource.loopEnd = sound._stop;\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the playback rate of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   rate() -> Returns the first sound node's current playback rate.\n     *   rate(id) -> Returns the sound id's current playback rate.\n     *   rate(rate) -> Sets the playback rate of all sounds in this Howl group.\n     *   rate(rate, id) -> Sets the playback rate of passed sound id.\n     * @return {Howl/Number} Returns self or the current playback rate.\n     */\n    rate: function() {\n      var self = this;\n      var args = arguments;\n      var rate, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current rate of the first node.\n        id = self._sounds[0]._id;\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new rate value.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          rate = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        rate = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the playback rate or return the current value.\n      var sound;\n      if (typeof rate === 'number') {\n        // If the sound hasn't loaded, add it to the load queue to change playback rate when capable.\n        if (self._state !== 'loaded' || self._playLock) {\n          self._queue.push({\n            event: 'rate',\n            action: function() {\n              self.rate.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group rate.\n        if (typeof id === 'undefined') {\n          self._rate = rate;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            // Keep track of our position when the rate changed and update the playback\n            // start position so we can properly adjust the seek position for time elapsed.\n            if (self.playing(id[i])) {\n              sound._rateSeek = self.seek(id[i]);\n              sound._playStart = self._webAudio ? Howler.ctx.currentTime : sound._playStart;\n            }\n            sound._rate = rate;\n\n            // Change the playback rate.\n            if (self._webAudio && sound._node && sound._node.bufferSource) {\n              sound._node.bufferSource.playbackRate.setValueAtTime(rate, Howler.ctx.currentTime);\n            } else if (sound._node) {\n              sound._node.playbackRate = rate;\n            }\n\n            // Reset the timers.\n            var seek = self.seek(id[i]);\n            var duration = ((self._sprite[sound._sprite][0] + self._sprite[sound._sprite][1]) / 1000) - seek;\n            var timeout = (duration * 1000) / Math.abs(sound._rate);\n\n            // Start a new end timer if sound is already playing.\n            if (self._endTimers[id[i]] || !sound._paused) {\n              self._clearTimer(id[i]);\n              self._endTimers[id[i]] = setTimeout(self._ended.bind(self, sound), timeout);\n            }\n\n            self._emit('rate', sound._id);\n          }\n        }\n      } else {\n        sound = self._soundById(id);\n        return sound ? sound._rate : self._rate;\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the seek position of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   seek() -> Returns the first sound node's current seek position.\n     *   seek(id) -> Returns the sound id's current seek position.\n     *   seek(seek) -> Sets the seek position of the first sound node.\n     *   seek(seek, id) -> Sets the seek position of passed sound id.\n     * @return {Howl/Number} Returns self or the current seek position.\n     */\n    seek: function() {\n      var self = this;\n      var args = arguments;\n      var seek, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current position of the first node.\n        id = self._sounds[0]._id;\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new seek position.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else if (self._sounds.length) {\n          id = self._sounds[0]._id;\n          seek = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        seek = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // If there is no ID, bail out.\n      if (typeof id === 'undefined') {\n        return self;\n      }\n\n      // If the sound hasn't loaded, add it to the load queue to seek when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'seek',\n          action: function() {\n            self.seek.apply(self, args);\n          }\n        });\n\n        return self;\n      }\n\n      // Get the sound.\n      var sound = self._soundById(id);\n\n      if (sound) {\n        if (typeof seek === 'number' && seek >= 0) {\n          // Pause the sound and update position for restarting playback.\n          var playing = self.playing(id);\n          if (playing) {\n            self.pause(id, true);\n          }\n\n          // Move the position of the track and cancel timer.\n          sound._seek = seek;\n          sound._ended = false;\n          self._clearTimer(id);\n\n          // Update the seek position for HTML5 Audio.\n          if (!self._webAudio && sound._node && !isNaN(sound._node.duration)) {\n            sound._node.currentTime = seek;\n          }\n\n          // Seek and emit when ready.\n          var seekAndEmit = function() {\n            self._emit('seek', id);\n\n            // Restart the playback if the sound was playing.\n            if (playing) {\n              self.play(id, true);\n            }\n          };\n\n          // Wait for the play lock to be unset before emitting (HTML5 Audio).\n          if (playing && !self._webAudio) {\n            var emitSeek = function() {\n              if (!self._playLock) {\n                seekAndEmit();\n              } else {\n                setTimeout(emitSeek, 0);\n              }\n            };\n            setTimeout(emitSeek, 0);\n          } else {\n            seekAndEmit();\n          }\n        } else {\n          if (self._webAudio) {\n            var realTime = self.playing(id) ? Howler.ctx.currentTime - sound._playStart : 0;\n            var rateSeek = sound._rateSeek ? sound._rateSeek - sound._seek : 0;\n            return sound._seek + (rateSeek + realTime * Math.abs(sound._rate));\n          } else {\n            return sound._node.currentTime;\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Check if a specific sound is currently playing or not (if id is provided), or check if at least one of the sounds in the group is playing or not.\n     * @param  {Number}  id The sound id to check. If none is passed, the whole sound group is checked.\n     * @return {Boolean} True if playing and false if not.\n     */\n    playing: function(id) {\n      var self = this;\n\n      // Check the passed sound ID (if any).\n      if (typeof id === 'number') {\n        var sound = self._soundById(id);\n        return sound ? !sound._paused : false;\n      }\n\n      // Otherwise, loop through all sounds and check if any are playing.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (!self._sounds[i]._paused) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Get the duration of this sound. Passing a sound id will return the sprite duration.\n     * @param  {Number} id The sound id to check. If none is passed, return full source duration.\n     * @return {Number} Audio duration in seconds.\n     */\n    duration: function(id) {\n      var self = this;\n      var duration = self._duration;\n\n      // If we pass an ID, get the sound and return the sprite length.\n      var sound = self._soundById(id);\n      if (sound) {\n        duration = self._sprite[sound._sprite][1] / 1000;\n      }\n\n      return duration;\n    },\n\n    /**\n     * Returns the current loaded state of this Howl.\n     * @return {String} 'unloaded', 'loading', 'loaded'\n     */\n    state: function() {\n      return this._state;\n    },\n\n    /**\n     * Unload and destroy the current Howl object.\n     * This will immediately stop all sound instances attached to this group.\n     */\n    unload: function() {\n      var self = this;\n\n      // Stop playing any active sounds.\n      var sounds = self._sounds;\n      for (var i=0; i<sounds.length; i++) {\n        // Stop the sound if it is currently playing.\n        if (!sounds[i]._paused) {\n          self.stop(sounds[i]._id);\n        }\n\n        // Remove the source or disconnect.\n        if (!self._webAudio) {\n          // Set the source to 0-second silence to stop any downloading (except in IE).\n          self._clearSound(sounds[i]._node);\n\n          // Remove any event listeners.\n          sounds[i]._node.removeEventListener('error', sounds[i]._errorFn, false);\n          sounds[i]._node.removeEventListener(Howler._canPlayEvent, sounds[i]._loadFn, false);\n\n          // Release the Audio object back to the pool.\n          Howler._releaseHtml5Audio(sounds[i]._node);\n        }\n\n        // Empty out all of the nodes.\n        delete sounds[i]._node;\n\n        // Make sure all timers are cleared out.\n        self._clearTimer(sounds[i]._id);\n      }\n\n      // Remove the references in the global Howler object.\n      var index = Howler._howls.indexOf(self);\n      if (index >= 0) {\n        Howler._howls.splice(index, 1);\n      }\n\n      // Delete this sound from the cache (if no other Howl is using it).\n      var remCache = true;\n      for (i=0; i<Howler._howls.length; i++) {\n        if (Howler._howls[i]._src === self._src || self._src.indexOf(Howler._howls[i]._src) >= 0) {\n          remCache = false;\n          break;\n        }\n      }\n\n      if (cache && remCache) {\n        delete cache[self._src];\n      }\n\n      // Clear global errors.\n      Howler.noAudio = false;\n\n      // Clear out `self`.\n      self._state = 'unloaded';\n      self._sounds = [];\n      self = null;\n\n      return null;\n    },\n\n    /**\n     * Listen to a custom event.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @param  {Number}   once  (INTERNAL) Marks event to fire only once.\n     * @return {Howl}\n     */\n    on: function(event, fn, id, once) {\n      var self = this;\n      var events = self['_on' + event];\n\n      if (typeof fn === 'function') {\n        events.push(once ? {id: id, fn: fn, once: once} : {id: id, fn: fn});\n      }\n\n      return self;\n    },\n\n    /**\n     * Remove a custom event. Call without parameters to remove all events.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to remove. Leave empty to remove all.\n     * @param  {Number}   id    (optional) Only remove events for this sound.\n     * @return {Howl}\n     */\n    off: function(event, fn, id) {\n      var self = this;\n      var events = self['_on' + event];\n      var i = 0;\n\n      // Allow passing just an event and ID.\n      if (typeof fn === 'number') {\n        id = fn;\n        fn = null;\n      }\n\n      if (fn || id) {\n        // Loop through event store and remove the passed function.\n        for (i=0; i<events.length; i++) {\n          var isId = (id === events[i].id);\n          if (fn === events[i].fn && isId || !fn && isId) {\n            events.splice(i, 1);\n            break;\n          }\n        }\n      } else if (event) {\n        // Clear out all events of this type.\n        self['_on' + event] = [];\n      } else {\n        // Clear out all events of every type.\n        var keys = Object.keys(self);\n        for (i=0; i<keys.length; i++) {\n          if ((keys[i].indexOf('_on') === 0) && Array.isArray(self[keys[i]])) {\n            self[keys[i]] = [];\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Listen to a custom event and remove it once fired.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @return {Howl}\n     */\n    once: function(event, fn, id) {\n      var self = this;\n\n      // Setup the event listener.\n      self.on(event, fn, id, 1);\n\n      return self;\n    },\n\n    /**\n     * Emit all events of a specific type and pass the sound id.\n     * @param  {String} event Event name.\n     * @param  {Number} id    Sound ID.\n     * @param  {Number} msg   Message to go with event.\n     * @return {Howl}\n     */\n    _emit: function(event, id, msg) {\n      var self = this;\n      var events = self['_on' + event];\n\n      // Loop through event store and fire all functions.\n      for (var i=events.length-1; i>=0; i--) {\n        // Only fire the listener if the correct ID is used.\n        if (!events[i].id || events[i].id === id || event === 'load') {\n          setTimeout(function(fn) {\n            fn.call(this, id, msg);\n          }.bind(self, events[i].fn), 0);\n\n          // If this event was setup with `once`, remove it.\n          if (events[i].once) {\n            self.off(event, events[i].fn, events[i].id);\n          }\n        }\n      }\n\n      // Pass the event type into load queue so that it can continue stepping.\n      self._loadQueue(event);\n\n      return self;\n    },\n\n    /**\n     * Queue of actions initiated before the sound has loaded.\n     * These will be called in sequence, with the next only firing\n     * after the previous has finished executing (even if async like play).\n     * @return {Howl}\n     */\n    _loadQueue: function(event) {\n      var self = this;\n\n      if (self._queue.length > 0) {\n        var task = self._queue[0];\n\n        // Remove this task if a matching event was passed.\n        if (task.event === event) {\n          self._queue.shift();\n          self._loadQueue();\n        }\n\n        // Run the task if no event type is passed.\n        if (!event) {\n          task.action();\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Fired when playback ends at the end of the duration.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _ended: function(sound) {\n      var self = this;\n      var sprite = sound._sprite;\n\n      // If we are using IE and there was network latency we may be clipping\n      // audio before it completes playing. Lets check the node to make sure it\n      // believes it has completed, before ending the playback.\n      if (!self._webAudio && sound._node && !sound._node.paused && !sound._node.ended && sound._node.currentTime < sound._stop) {\n        setTimeout(self._ended.bind(self, sound), 100);\n        return self;\n      }\n\n      // Should this sound loop?\n      var loop = !!(sound._loop || self._sprite[sprite][2]);\n\n      // Fire the ended event.\n      self._emit('end', sound._id);\n\n      // Restart the playback for HTML5 Audio loop.\n      if (!self._webAudio && loop) {\n        self.stop(sound._id, true).play(sound._id);\n      }\n\n      // Restart this timer if on a Web Audio loop.\n      if (self._webAudio && loop) {\n        self._emit('play', sound._id);\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        sound._playStart = Howler.ctx.currentTime;\n\n        var timeout = ((sound._stop - sound._start) * 1000) / Math.abs(sound._rate);\n        self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n      }\n\n      // Mark the node as paused.\n      if (self._webAudio && !loop) {\n        sound._paused = true;\n        sound._ended = true;\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        self._clearTimer(sound._id);\n\n        // Clean up the buffer source.\n        self._cleanBuffer(sound._node);\n\n        // Attempt to auto-suspend AudioContext if no sounds are still playing.\n        Howler._autoSuspend();\n      }\n\n      // When using a sprite, end the track.\n      if (!self._webAudio && !loop) {\n        self.stop(sound._id, true);\n      }\n\n      return self;\n    },\n\n    /**\n     * Clear the end timer for a sound playback.\n     * @param  {Number} id The sound ID.\n     * @return {Howl}\n     */\n    _clearTimer: function(id) {\n      var self = this;\n\n      if (self._endTimers[id]) {\n        // Clear the timeout or remove the ended listener.\n        if (typeof self._endTimers[id] !== 'function') {\n          clearTimeout(self._endTimers[id]);\n        } else {\n          var sound = self._soundById(id);\n          if (sound && sound._node) {\n            sound._node.removeEventListener('ended', self._endTimers[id], false);\n          }\n        }\n\n        delete self._endTimers[id];\n      }\n\n      return self;\n    },\n\n    /**\n     * Return the sound identified by this ID, or return null.\n     * @param  {Number} id Sound ID\n     * @return {Object}    Sound object or null.\n     */\n    _soundById: function(id) {\n      var self = this;\n\n      // Loop through all sounds and find the one with this ID.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (id === self._sounds[i]._id) {\n          return self._sounds[i];\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Return an inactive sound from the pool or create a new one.\n     * @return {Sound} Sound playback object.\n     */\n    _inactiveSound: function() {\n      var self = this;\n\n      self._drain();\n\n      // Find the first inactive node to recycle.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          return self._sounds[i].reset();\n        }\n      }\n\n      // If no inactive node was found, create a new one.\n      return new Sound(self);\n    },\n\n    /**\n     * Drain excess inactive sounds from the pool.\n     */\n    _drain: function() {\n      var self = this;\n      var limit = self._pool;\n      var cnt = 0;\n      var i = 0;\n\n      // If there are less sounds than the max pool size, we are done.\n      if (self._sounds.length < limit) {\n        return;\n      }\n\n      // Count the number of inactive sounds.\n      for (i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          cnt++;\n        }\n      }\n\n      // Remove excess inactive sounds, going in reverse order.\n      for (i=self._sounds.length - 1; i>=0; i--) {\n        if (cnt <= limit) {\n          return;\n        }\n\n        if (self._sounds[i]._ended) {\n          // Disconnect the audio source when using Web Audio.\n          if (self._webAudio && self._sounds[i]._node) {\n            self._sounds[i]._node.disconnect(0);\n          }\n\n          // Remove sounds until we have the pool size.\n          self._sounds.splice(i, 1);\n          cnt--;\n        }\n      }\n    },\n\n    /**\n     * Get all ID's from the sounds pool.\n     * @param  {Number} id Only return one ID if one is passed.\n     * @return {Array}    Array of IDs.\n     */\n    _getSoundIds: function(id) {\n      var self = this;\n\n      if (typeof id === 'undefined') {\n        var ids = [];\n        for (var i=0; i<self._sounds.length; i++) {\n          ids.push(self._sounds[i]._id);\n        }\n\n        return ids;\n      } else {\n        return [id];\n      }\n    },\n\n    /**\n     * Load the sound back into the buffer source.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _refreshBuffer: function(sound) {\n      var self = this;\n\n      // Setup the buffer source for playback.\n      sound._node.bufferSource = Howler.ctx.createBufferSource();\n      sound._node.bufferSource.buffer = cache[self._src];\n\n      // Connect to the correct node.\n      if (sound._panner) {\n        sound._node.bufferSource.connect(sound._panner);\n      } else {\n        sound._node.bufferSource.connect(sound._node);\n      }\n\n      // Setup looping and playback rate.\n      sound._node.bufferSource.loop = sound._loop;\n      if (sound._loop) {\n        sound._node.bufferSource.loopStart = sound._start || 0;\n        sound._node.bufferSource.loopEnd = sound._stop || 0;\n      }\n      sound._node.bufferSource.playbackRate.setValueAtTime(sound._rate, Howler.ctx.currentTime);\n\n      return self;\n    },\n\n    /**\n     * Prevent memory leaks by cleaning up the buffer source after playback.\n     * @param  {Object} node Sound's audio node containing the buffer source.\n     * @return {Howl}\n     */\n    _cleanBuffer: function(node) {\n      var self = this;\n      var isIOS = Howler._navigator && Howler._navigator.vendor.indexOf('Apple') >= 0;\n\n      if (Howler._scratchBuffer && node.bufferSource) {\n        node.bufferSource.onended = null;\n        node.bufferSource.disconnect(0);\n        if (isIOS) {\n          try { node.bufferSource.buffer = Howler._scratchBuffer; } catch(e) {}\n        }\n      }\n      node.bufferSource = null;\n\n      return self;\n    },\n\n    /**\n     * Set the source to a 0-second silence to stop any downloading (except in IE).\n     * @param  {Object} node Audio node to clear.\n     */\n    _clearSound: function(node) {\n      var checkIE = /MSIE |Trident\\//.test(Howler._navigator && Howler._navigator.userAgent);\n      if (!checkIE) {\n        node.src = 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA';\n      }\n    }\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Setup the sound object, which each node attached to a Howl group is contained in.\n   * @param {Object} howl The Howl parent group.\n   */\n  var Sound = function(howl) {\n    this._parent = howl;\n    this.init();\n  };\n  Sound.prototype = {\n    /**\n     * Initialize a new Sound object.\n     * @return {Sound}\n     */\n    init: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup the default parameters.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a unique ID for this sound.\n      self._id = ++Howler._counter;\n\n      // Add itself to the parent's pool.\n      parent._sounds.push(self);\n\n      // Create the new node.\n      self.create();\n\n      return self;\n    },\n\n    /**\n     * Create and setup a new sound object, whether HTML5 Audio or Web Audio.\n     * @return {Sound}\n     */\n    create: function() {\n      var self = this;\n      var parent = self._parent;\n      var volume = (Howler._muted || self._muted || self._parent._muted) ? 0 : self._volume;\n\n      if (parent._webAudio) {\n        // Create the gain node for controlling volume (the source will connect to this).\n        self._node = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n        self._node.gain.setValueAtTime(volume, Howler.ctx.currentTime);\n        self._node.paused = true;\n        self._node.connect(Howler.masterGain);\n      } else if (!Howler.noAudio) {\n        // Get an unlocked Audio object from the pool.\n        self._node = Howler._obtainHtml5Audio();\n\n        // Listen for errors (http://dev.w3.org/html5/spec-author-view/spec.html#mediaerror).\n        self._errorFn = self._errorListener.bind(self);\n        self._node.addEventListener('error', self._errorFn, false);\n\n        // Listen for 'canplaythrough' event to let us know the sound is ready.\n        self._loadFn = self._loadListener.bind(self);\n        self._node.addEventListener(Howler._canPlayEvent, self._loadFn, false);\n\n        // Setup the new audio node.\n        self._node.src = parent._src;\n        self._node.preload = parent._preload === true ? 'auto' : parent._preload;\n        self._node.volume = volume * Howler.volume();\n\n        // Begin loading the source.\n        self._node.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Reset the parameters of this sound to the original state (for recycle).\n     * @return {Sound}\n     */\n    reset: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all of the parameters of this sound.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._rateSeek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a new ID so that it isn't confused with the previous sound.\n      self._id = ++Howler._counter;\n\n      return self;\n    },\n\n    /**\n     * HTML5 Audio error listener callback.\n     */\n    _errorListener: function() {\n      var self = this;\n\n      // Fire an error event and pass back the code.\n      self._parent._emit('loaderror', self._id, self._node.error ? self._node.error.code : 0);\n\n      // Clear the event listener.\n      self._node.removeEventListener('error', self._errorFn, false);\n    },\n\n    /**\n     * HTML5 Audio canplaythrough listener callback.\n     */\n    _loadListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Round up the duration to account for the lower precision in HTML5 Audio.\n      parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n      // Setup a sprite if none is defined.\n      if (Object.keys(parent._sprite).length === 0) {\n        parent._sprite = {__default: [0, parent._duration * 1000]};\n      }\n\n      if (parent._state !== 'loaded') {\n        parent._state = 'loaded';\n        parent._emit('load');\n        parent._loadQueue();\n      }\n\n      // Clear the event listener.\n      self._node.removeEventListener(Howler._canPlayEvent, self._loadFn, false);\n    }\n  };\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  var cache = {};\n\n  /**\n   * Buffer a sound from URL, Data URI or cache and decode to audio source (Web Audio API).\n   * @param  {Howl} self\n   */\n  var loadBuffer = function(self) {\n    var url = self._src;\n\n    // Check if the buffer has already been cached and use it instead.\n    if (cache[url]) {\n      // Set the duration from the cache.\n      self._duration = cache[url].duration;\n\n      // Load the sound into this Howl.\n      loadSound(self);\n\n      return;\n    }\n\n    if (/^data:[^;]+;base64,/.test(url)) {\n      // Decode the base64 data URI without XHR, since some browsers don't support it.\n      var data = atob(url.split(',')[1]);\n      var dataView = new Uint8Array(data.length);\n      for (var i=0; i<data.length; ++i) {\n        dataView[i] = data.charCodeAt(i);\n      }\n\n      decodeAudioData(dataView.buffer, self);\n    } else {\n      // Load the buffer from the URL.\n      var xhr = new XMLHttpRequest();\n      xhr.open(self._xhr.method, url, true);\n      xhr.withCredentials = self._xhr.withCredentials;\n      xhr.responseType = 'arraybuffer';\n\n      // Apply any custom headers to the request.\n      if (self._xhr.headers) {\n        Object.keys(self._xhr.headers).forEach(function(key) {\n          xhr.setRequestHeader(key, self._xhr.headers[key]);\n        });\n      }\n\n      xhr.onload = function() {\n        // Make sure we get a successful response back.\n        var code = (xhr.status + '')[0];\n        if (code !== '0' && code !== '2' && code !== '3') {\n          self._emit('loaderror', null, 'Failed loading audio file with status: ' + xhr.status + '.');\n          return;\n        }\n\n        decodeAudioData(xhr.response, self);\n      };\n      xhr.onerror = function() {\n        // If there is an error, switch to HTML5 Audio.\n        if (self._webAudio) {\n          self._html5 = true;\n          self._webAudio = false;\n          self._sounds = [];\n          delete cache[url];\n          self.load();\n        }\n      };\n      safeXhrSend(xhr);\n    }\n  };\n\n  /**\n   * Send the XHR request wrapped in a try/catch.\n   * @param  {Object} xhr XHR to send.\n   */\n  var safeXhrSend = function(xhr) {\n    try {\n      xhr.send();\n    } catch (e) {\n      xhr.onerror();\n    }\n  };\n\n  /**\n   * Decode audio data from an array buffer.\n   * @param  {ArrayBuffer} arraybuffer The audio data.\n   * @param  {Howl}        self\n   */\n  var decodeAudioData = function(arraybuffer, self) {\n    // Fire a load error if something broke.\n    var error = function() {\n      self._emit('loaderror', null, 'Decoding audio data failed.');\n    };\n\n    // Load the sound on success.\n    var success = function(buffer) {\n      if (buffer && self._sounds.length > 0) {\n        cache[self._src] = buffer;\n        loadSound(self, buffer);\n      } else {\n        error();\n      }\n    };\n\n    // Decode the buffer into an audio source.\n    if (typeof Promise !== 'undefined' && Howler.ctx.decodeAudioData.length === 1) {\n      Howler.ctx.decodeAudioData(arraybuffer).then(success).catch(error);\n    } else {\n      Howler.ctx.decodeAudioData(arraybuffer, success, error);\n    }\n  }\n\n  /**\n   * Sound is now loaded, so finish setting everything up and fire the loaded event.\n   * @param  {Howl} self\n   * @param  {Object} buffer The decoded buffer sound source.\n   */\n  var loadSound = function(self, buffer) {\n    // Set the duration.\n    if (buffer && !self._duration) {\n      self._duration = buffer.duration;\n    }\n\n    // Setup a sprite if none is defined.\n    if (Object.keys(self._sprite).length === 0) {\n      self._sprite = {__default: [0, self._duration * 1000]};\n    }\n\n    // Fire the loaded event.\n    if (self._state !== 'loaded') {\n      self._state = 'loaded';\n      self._emit('load');\n      self._loadQueue();\n    }\n  };\n\n  /**\n   * Setup the audio context when available, or switch to HTML5 Audio mode.\n   */\n  var setupAudioContext = function() {\n    // If we have already detected that Web Audio isn't supported, don't run this step again.\n    if (!Howler.usingWebAudio) {\n      return;\n    }\n\n    // Check if we are using Web Audio and setup the AudioContext if we are.\n    try {\n      if (typeof AudioContext !== 'undefined') {\n        Howler.ctx = new AudioContext();\n      } else if (typeof webkitAudioContext !== 'undefined') {\n        Howler.ctx = new webkitAudioContext();\n      } else {\n        Howler.usingWebAudio = false;\n      }\n    } catch(e) {\n      Howler.usingWebAudio = false;\n    }\n\n    // If the audio context creation still failed, set using web audio to false.\n    if (!Howler.ctx) {\n      Howler.usingWebAudio = false;\n    }\n\n    // Check if a webview is being used on iOS8 or earlier (rather than the browser).\n    // If it is, disable Web Audio as it causes crashing.\n    var iOS = (/iP(hone|od|ad)/.test(Howler._navigator && Howler._navigator.platform));\n    var appVersion = Howler._navigator && Howler._navigator.appVersion.match(/OS (\\d+)_(\\d+)_?(\\d+)?/);\n    var version = appVersion ? parseInt(appVersion[1], 10) : null;\n    if (iOS && version && version < 9) {\n      var safari = /safari/.test(Howler._navigator && Howler._navigator.userAgent.toLowerCase());\n      if (Howler._navigator && !safari) {\n        Howler.usingWebAudio = false;\n      }\n    }\n\n    // Create and expose the master GainNode when using Web Audio (useful for plugins or advanced usage).\n    if (Howler.usingWebAudio) {\n      Howler.masterGain = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n      Howler.masterGain.gain.setValueAtTime(Howler._muted ? 0 : Howler._volume, Howler.ctx.currentTime);\n      Howler.masterGain.connect(Howler.ctx.destination);\n    }\n\n    // Re-run the setup on Howler.\n    Howler._setup();\n  };\n\n  // Add support for AMD (Asynchronous Module Definition) libraries such as require.js.\n  if (typeof define === 'function' && define.amd) {\n    define([], function() {\n      return {\n        Howler: Howler,\n        Howl: Howl\n      };\n    });\n  }\n\n  // Add support for CommonJS libraries such as browserify.\n  if (typeof exports !== 'undefined') {\n    exports.Howler = Howler;\n    exports.Howl = Howl;\n  }\n\n  // Add to global in Node.js (for testing, etc).\n  if (typeof global !== 'undefined') {\n    global.HowlerGlobal = HowlerGlobal;\n    global.Howler = Howler;\n    global.Howl = Howl;\n    global.Sound = Sound;\n  } else if (typeof window !== 'undefined') {  // Define globally in case AMD is not available or unused.\n    window.HowlerGlobal = HowlerGlobal;\n    window.Howler = Howler;\n    window.Howl = Howl;\n    window.Sound = Sound;\n  }\n})();\n\n\n/*!\n *  Spatial Plugin - Adds support for stereo and 3D audio where Web Audio is supported.\n *  \n *  howler.js v2.2.0\n *  howlerjs.com\n *\n *  (c) 2013-2020, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  // Setup default properties.\n  HowlerGlobal.prototype._pos = [0, 0, 0];\n  HowlerGlobal.prototype._orientation = [0, 0, -1, 0, 1, 0];\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Helper method to update the stereo panning position of all current Howls.\n   * Future Howls will not use this value unless explicitly set.\n   * @param  {Number} pan A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @return {Howler/Number}     Self or current stereo panning value.\n   */\n  HowlerGlobal.prototype.stereo = function(pan) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Loop through all Howls and update their stereo panning.\n    for (var i=self._howls.length-1; i>=0; i--) {\n      self._howls[i].stereo(pan);\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the position of the listener in 3D cartesian space. Sounds using\n   * 3D position will be relative to the listener's position.\n   * @param  {Number} x The x-position of the listener.\n   * @param  {Number} y The y-position of the listener.\n   * @param  {Number} z The z-position of the listener.\n   * @return {Howler/Array}   Self or current listener position.\n   */\n  HowlerGlobal.prototype.pos = function(x, y, z) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._pos[1] : y;\n    z = (typeof z !== 'number') ? self._pos[2] : z;\n\n    if (typeof x === 'number') {\n      self._pos = [x, y, z];\n\n      if (typeof self.ctx.listener.positionX !== 'undefined') {\n        self.ctx.listener.positionX.setTargetAtTime(self._pos[0], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionY.setTargetAtTime(self._pos[1], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionZ.setTargetAtTime(self._pos[2], Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setPosition(self._pos[0], self._pos[1], self._pos[2]);\n      }\n    } else {\n      return self._pos;\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the listener is pointing in the 3D cartesian space.\n   * A front and up vector must be provided. The front is the direction the\n   * face of the listener is pointing, and up is the direction the top of the\n   * listener is pointing. Thus, these values are expected to be at right angles\n   * from each other.\n   * @param  {Number} x   The x-orientation of the listener.\n   * @param  {Number} y   The y-orientation of the listener.\n   * @param  {Number} z   The z-orientation of the listener.\n   * @param  {Number} xUp The x-orientation of the top of the listener.\n   * @param  {Number} yUp The y-orientation of the top of the listener.\n   * @param  {Number} zUp The z-orientation of the top of the listener.\n   * @return {Howler/Array}     Returns self or the current orientation vectors.\n   */\n  HowlerGlobal.prototype.orientation = function(x, y, z, xUp, yUp, zUp) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    var or = self._orientation;\n    y = (typeof y !== 'number') ? or[1] : y;\n    z = (typeof z !== 'number') ? or[2] : z;\n    xUp = (typeof xUp !== 'number') ? or[3] : xUp;\n    yUp = (typeof yUp !== 'number') ? or[4] : yUp;\n    zUp = (typeof zUp !== 'number') ? or[5] : zUp;\n\n    if (typeof x === 'number') {\n      self._orientation = [x, y, z, xUp, yUp, zUp];\n\n      if (typeof self.ctx.listener.forwardX !== 'undefined') {\n        self.ctx.listener.forwardX.setTargetAtTime(x, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardY.setTargetAtTime(y, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardZ.setTargetAtTime(z, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upX.setTargetAtTime(xUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upY.setTargetAtTime(yUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upZ.setTargetAtTime(zUp, Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setOrientation(x, y, z, xUp, yUp, zUp);\n      }\n    } else {\n      return or;\n    }\n\n    return self;\n  };\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core init.\n   * @param  {Function} _super Core init method.\n   * @return {Howl}\n   */\n  Howl.prototype.init = (function(_super) {\n    return function(o) {\n      var self = this;\n\n      // Setup user-defined default properties.\n      self._orientation = o.orientation || [1, 0, 0];\n      self._stereo = o.stereo || null;\n      self._pos = o.pos || null;\n      self._pannerAttr = {\n        coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : 360,\n        coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : 360,\n        coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : 0,\n        distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : 'inverse',\n        maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : 10000,\n        panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : 'HRTF',\n        refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : 1,\n        rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : 1\n      };\n\n      // Setup event listeners.\n      self._onstereo = o.onstereo ? [{fn: o.onstereo}] : [];\n      self._onpos = o.onpos ? [{fn: o.onpos}] : [];\n      self._onorientation = o.onorientation ? [{fn: o.onorientation}] : [];\n\n      // Complete initilization with howler.js core's init function.\n      return _super.call(this, o);\n    };\n  })(Howl.prototype.init);\n\n  /**\n   * Get/set the stereo panning of the audio source for this sound or all in the group.\n   * @param  {Number} pan  A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Number}    Returns self or the current stereo panning value.\n   */\n  Howl.prototype.stereo = function(pan, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change stereo pan when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'stereo',\n        action: function() {\n          self.stereo(pan, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Check for PannerStereoNode support and fallback to PannerNode if it doesn't exist.\n    var pannerType = (typeof Howler.ctx.createStereoPanner === 'undefined') ? 'spatial' : 'stereo';\n\n    // Setup the group's stereo panning if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's stereo panning if no parameters are passed.\n      if (typeof pan === 'number') {\n        self._stereo = pan;\n        self._pos = [pan, 0, 0];\n      } else {\n        return self._stereo;\n      }\n    }\n\n    // Change the streo panning of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof pan === 'number') {\n          sound._stereo = pan;\n          sound._pos = [pan, 0, 0];\n\n          if (sound._node) {\n            // If we are falling back, make sure the panningModel is equalpower.\n            sound._pannerAttr.panningModel = 'equalpower';\n\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || !sound._panner.pan) {\n              setupPanner(sound, pannerType);\n            }\n\n            if (pannerType === 'spatial') {\n              if (typeof sound._panner.positionX !== 'undefined') {\n                sound._panner.positionX.setValueAtTime(pan, Howler.ctx.currentTime);\n                sound._panner.positionY.setValueAtTime(0, Howler.ctx.currentTime);\n                sound._panner.positionZ.setValueAtTime(0, Howler.ctx.currentTime);\n              } else {\n                sound._panner.setPosition(pan, 0, 0);\n              }\n            } else {\n              sound._panner.pan.setValueAtTime(pan, Howler.ctx.currentTime);\n            }\n          }\n\n          self._emit('stereo', sound._id);\n        } else {\n          return sound._stereo;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the 3D spatial position of the audio source for this sound or group relative to the global listener.\n   * @param  {Number} x  The x-position of the audio source.\n   * @param  {Number} y  The y-position of the audio source.\n   * @param  {Number} z  The z-position of the audio source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial position: [x, y, z].\n   */\n  Howl.prototype.pos = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change position when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'pos',\n        action: function() {\n          self.pos(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? 0 : y;\n    z = (typeof z !== 'number') ? -0.5 : z;\n\n    // Setup the group's spatial position if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial position if no parameters are passed.\n      if (typeof x === 'number') {\n        self._pos = [x, y, z];\n      } else {\n        return self._pos;\n      }\n    }\n\n    // Change the spatial position of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._pos = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || sound._panner.pan) {\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.positionX !== 'undefined') {\n              sound._panner.positionX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.positionY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.positionZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setPosition(x, y, z);\n            }\n          }\n\n          self._emit('pos', sound._id);\n        } else {\n          return sound._pos;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the audio source is pointing in the 3D cartesian coordinate\n   * space. Depending on how direction the sound is, based on the `cone` attributes,\n   * a sound pointing away from the listener can be quiet or silent.\n   * @param  {Number} x  The x-orientation of the source.\n   * @param  {Number} y  The y-orientation of the source.\n   * @param  {Number} z  The z-orientation of the source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial orientation: [x, y, z].\n   */\n  Howl.prototype.orientation = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change orientation when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'orientation',\n        action: function() {\n          self.orientation(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._orientation[1] : y;\n    z = (typeof z !== 'number') ? self._orientation[2] : z;\n\n    // Setup the group's spatial orientation if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial orientation if no parameters are passed.\n      if (typeof x === 'number') {\n        self._orientation = [x, y, z];\n      } else {\n        return self._orientation;\n      }\n    }\n\n    // Change the spatial orientation of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._orientation = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner) {\n              // Make sure we have a position to setup the node with.\n              if (!sound._pos) {\n                sound._pos = self._pos || [0, 0, -0.5];\n              }\n\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.orientationX !== 'undefined') {\n              sound._panner.orientationX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.orientationY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.orientationZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setOrientation(x, y, z);\n            }\n          }\n\n          self._emit('orientation', sound._id);\n        } else {\n          return sound._orientation;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the panner node's attributes for a sound or group of sounds.\n   * This method can optionall take 0, 1 or 2 arguments.\n   *   pannerAttr() -> Returns the group's values.\n   *   pannerAttr(id) -> Returns the sound id's values.\n   *   pannerAttr(o) -> Set's the values of all sounds in this Howl group.\n   *   pannerAttr(o, id) -> Set's the values of passed sound id.\n   *\n   *   Attributes:\n   *     coneInnerAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      inside of which there will be no volume reduction.\n   *     coneOuterAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      outside of which the volume will be reduced to a constant value of `coneOuterGain`.\n   *     coneOuterGain - (0 by default) A parameter for directional audio sources, this is the gain outside of the\n   *                     `coneOuterAngle`. It is a linear value in the range `[0, 1]`.\n   *     distanceModel - ('inverse' by default) Determines algorithm used to reduce volume as audio moves away from\n   *                     listener. Can be `linear`, `inverse` or `exponential.\n   *     maxDistance - (10000 by default) The maximum distance between source and listener, after which the volume\n   *                   will not be reduced any further.\n   *     refDistance - (1 by default) A reference distance for reducing volume as source moves further from the listener.\n   *                   This is simply a variable of the distance model and has a different effect depending on which model\n   *                   is used and the scale of your coordinates. Generally, volume will be equal to 1 at this distance.\n   *     rolloffFactor - (1 by default) How quickly the volume reduces as source moves from listener. This is simply a\n   *                     variable of the distance model and can be in the range of `[0, 1]` with `linear` and `[0, ∞]`\n   *                     with `inverse` and `exponential`.\n   *     panningModel - ('HRTF' by default) Determines which spatialization algorithm is used to position audio.\n   *                     Can be `HRTF` or `equalpower`.\n   *\n   * @return {Howl/Object} Returns self or current panner attributes.\n   */\n  Howl.prototype.pannerAttr = function() {\n    var self = this;\n    var args = arguments;\n    var o, id, sound;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // Determine the values based on arguments.\n    if (args.length === 0) {\n      // Return the group's panner attribute values.\n      return self._pannerAttr;\n    } else if (args.length === 1) {\n      if (typeof args[0] === 'object') {\n        o = args[0];\n\n        // Set the grou's panner attribute values.\n        if (typeof id === 'undefined') {\n          if (!o.pannerAttr) {\n            o.pannerAttr = {\n              coneInnerAngle: o.coneInnerAngle,\n              coneOuterAngle: o.coneOuterAngle,\n              coneOuterGain: o.coneOuterGain,\n              distanceModel: o.distanceModel,\n              maxDistance: o.maxDistance,\n              refDistance: o.refDistance,\n              rolloffFactor: o.rolloffFactor,\n              panningModel: o.panningModel\n            };\n          }\n\n          self._pannerAttr = {\n            coneInnerAngle: typeof o.pannerAttr.coneInnerAngle !== 'undefined' ? o.pannerAttr.coneInnerAngle : self._coneInnerAngle,\n            coneOuterAngle: typeof o.pannerAttr.coneOuterAngle !== 'undefined' ? o.pannerAttr.coneOuterAngle : self._coneOuterAngle,\n            coneOuterGain: typeof o.pannerAttr.coneOuterGain !== 'undefined' ? o.pannerAttr.coneOuterGain : self._coneOuterGain,\n            distanceModel: typeof o.pannerAttr.distanceModel !== 'undefined' ? o.pannerAttr.distanceModel : self._distanceModel,\n            maxDistance: typeof o.pannerAttr.maxDistance !== 'undefined' ? o.pannerAttr.maxDistance : self._maxDistance,\n            refDistance: typeof o.pannerAttr.refDistance !== 'undefined' ? o.pannerAttr.refDistance : self._refDistance,\n            rolloffFactor: typeof o.pannerAttr.rolloffFactor !== 'undefined' ? o.pannerAttr.rolloffFactor : self._rolloffFactor,\n            panningModel: typeof o.pannerAttr.panningModel !== 'undefined' ? o.pannerAttr.panningModel : self._panningModel\n          };\n        }\n      } else {\n        // Return this sound's panner attribute values.\n        sound = self._soundById(parseInt(args[0], 10));\n        return sound ? sound._pannerAttr : self._pannerAttr;\n      }\n    } else if (args.length === 2) {\n      o = args[0];\n      id = parseInt(args[1], 10);\n    }\n\n    // Update the values of the specified sounds.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      sound = self._soundById(ids[i]);\n\n      if (sound) {\n        // Merge the new values into the sound.\n        var pa = sound._pannerAttr;\n        pa = {\n          coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : pa.coneInnerAngle,\n          coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : pa.coneOuterAngle,\n          coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : pa.coneOuterGain,\n          distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : pa.distanceModel,\n          maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : pa.maxDistance,\n          refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : pa.refDistance,\n          rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : pa.rolloffFactor,\n          panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : pa.panningModel\n        };\n\n        // Update the panner values or create a new panner if none exists.\n        var panner = sound._panner;\n        if (panner) {\n          panner.coneInnerAngle = pa.coneInnerAngle;\n          panner.coneOuterAngle = pa.coneOuterAngle;\n          panner.coneOuterGain = pa.coneOuterGain;\n          panner.distanceModel = pa.distanceModel;\n          panner.maxDistance = pa.maxDistance;\n          panner.refDistance = pa.refDistance;\n          panner.rolloffFactor = pa.rolloffFactor;\n          panner.panningModel = pa.panningModel;\n        } else {\n          // Make sure we have a position to setup the node with.\n          if (!sound._pos) {\n            sound._pos = self._pos || [0, 0, -0.5];\n          }\n\n          // Create a new panner node.\n          setupPanner(sound, 'spatial');\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core Sound init.\n   * @param  {Function} _super Core Sound init method.\n   * @return {Sound}\n   */\n  Sound.prototype.init = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup user-defined default properties.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // Complete initilization with howler.js core Sound's init function.\n      _super.call(this);\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      }\n    };\n  })(Sound.prototype.init);\n\n  /**\n   * Override the Sound.reset method to clean up properties from the spatial plugin.\n   * @param  {Function} _super Sound reset method.\n   * @return {Sound}\n   */\n  Sound.prototype.reset = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all spatial plugin properties on this sound.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      } else if (self._panner) {\n        // Disconnect the panner.\n        self._panner.disconnect(0);\n        self._panner = undefined;\n        parent._refreshBuffer(self);\n      }\n\n      // Complete resetting of the sound.\n      return _super.call(this);\n    };\n  })(Sound.prototype.reset);\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create a new panner node and save it on the sound.\n   * @param  {Sound} sound Specific sound to setup panning on.\n   * @param {String} type Type of panner to create: 'stereo' or 'spatial'.\n   */\n  var setupPanner = function(sound, type) {\n    type = type || 'spatial';\n\n    // Create the new panner node.\n    if (type === 'spatial') {\n      sound._panner = Howler.ctx.createPanner();\n      sound._panner.coneInnerAngle = sound._pannerAttr.coneInnerAngle;\n      sound._panner.coneOuterAngle = sound._pannerAttr.coneOuterAngle;\n      sound._panner.coneOuterGain = sound._pannerAttr.coneOuterGain;\n      sound._panner.distanceModel = sound._pannerAttr.distanceModel;\n      sound._panner.maxDistance = sound._pannerAttr.maxDistance;\n      sound._panner.refDistance = sound._pannerAttr.refDistance;\n      sound._panner.rolloffFactor = sound._pannerAttr.rolloffFactor;\n      sound._panner.panningModel = sound._pannerAttr.panningModel;\n\n      if (typeof sound._panner.positionX !== 'undefined') {\n        sound._panner.positionX.setValueAtTime(sound._pos[0], Howler.ctx.currentTime);\n        sound._panner.positionY.setValueAtTime(sound._pos[1], Howler.ctx.currentTime);\n        sound._panner.positionZ.setValueAtTime(sound._pos[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setPosition(sound._pos[0], sound._pos[1], sound._pos[2]);\n      }\n\n      if (typeof sound._panner.orientationX !== 'undefined') {\n        sound._panner.orientationX.setValueAtTime(sound._orientation[0], Howler.ctx.currentTime);\n        sound._panner.orientationY.setValueAtTime(sound._orientation[1], Howler.ctx.currentTime);\n        sound._panner.orientationZ.setValueAtTime(sound._orientation[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setOrientation(sound._orientation[0], sound._orientation[1], sound._orientation[2]);\n      }\n    } else {\n      sound._panner = Howler.ctx.createStereoPanner();\n      sound._panner.pan.setValueAtTime(sound._stereo, Howler.ctx.currentTime);\n    }\n\n    sound._panner.connect(sound._node);\n\n    // Update the connections.\n    if (!sound._paused) {\n      sound._parent.pause(sound._id, true).play(sound._id, true);\n    }\n  };\n})();\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Noop function (do nothing)\n */\nvar noop = exports.noop = function noop() {};","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M16.5 12c0-1.77-1.02-3.29-2.5-4.03v2.21l2.45 2.45c.03-.2.05-.41.05-.63zm2.5 0c0 .94-.2 1.82-.54 2.64l1.51 1.51C20.63 14.91 21 13.5 21 12c0-4.28-2.99-7.86-7-8.77v2.06c2.89.86 5 3.54 5 6.71zM4.27 3L3 4.27 7.73 9H3v6h4l5 5v-6.73l4.25 4.25c-.67.52-1.42.93-2.25 1.18v2.06c1.38-.31 2.63-.95 3.69-1.81L19.73 21 21 19.73l-9-9L4.27 3zM12 4L9.91 6.09 12 8.18V4z\"\n}), 'VolumeOff');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M3 9v6h4l5 5V4L7 9H3zm13.5 3c0-1.77-1.02-3.29-2.5-4.03v8.05c1.48-.73 2.5-2.25 2.5-4.02zM14 3.23v2.06c2.89.86 5 3.54 5 6.71s-2.11 5.85-5 6.71v2.06c4.01-.91 7-4.49 7-8.77s-2.99-7.86-7-8.77z\"\n}), 'VolumeUp');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M6 6h2v12H6zm3.5 6l8.5 6V6z\"\n}), 'SkipPrevious');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M6 19h4V5H6v14zm8-14v14h4V5h-4z\"\n}), 'Pause');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M6 18l8.5-6L6 6v12zM16 6v12h2V6h-2z\"\n}), 'SkipNext');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M3.24 6.15C2.51 6.43 2 7.17 2 8v12c0 1.1.89 2 2 2h16c1.11 0 2-.9 2-2V8c0-1.11-.89-2-2-2H8.3l8.26-3.34L15.88 1 3.24 6.15zM7 20c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm13-8h-2v-2h-2v2H4V8h16v4z\"\n}), 'Radio');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M12 8l-6 6 1.41 1.41L12 10.83l4.59 4.58L18 14z\"\n}), 'ExpandLess');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z\"\n}), 'ExpandMore');\n\nexports.default = _default;"],"sourceRoot":""}